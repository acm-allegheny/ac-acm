[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Allegheny College CIS Course Tech Stack Guide",
    "section": "",
    "text": "Welcome to the Allegheny College CIS Course Tech Stack Guide for the Spring semester of the 2024-2025 academic year! This document was created by the Allegheny College ACM Student Chapter as part of our “SOS (Set-up Our Students) Week” initiative. It is designed to help students enrolled in Computer and Information Science (CIS) courses get set up with the necessary tools and software for their classes.\nOur goal is to make the setup process simple and stress-free, so you can focus on learning and excelling in your coursework. Whether you’re a beginner or an experienced programmer, this guide is here to provide step-by-step instructions, useful tips, and links to resources for all the tools you’ll need.\n\n\nBelow are detailed installation steps for commonly required tools, broken down by operating system. These tools will be used for ACM events and workshops and are also general tools widely used across the Computer and Information Science department. Following these setup instructions will ensure you are prepared for your coursework and extracurricular programming activities."
  },
  {
    "objectID": "index.html#general-setup-resources",
    "href": "index.html#general-setup-resources",
    "title": "Allegheny College CIS Course Tech Stack Guide",
    "section": "",
    "text": "Below are detailed installation steps for commonly required tools, broken down by operating system. These tools will be used for ACM events and workshops and are also general tools widely used across the Computer and Information Science department. Following these setup instructions will ensure you are prepared for your coursework and extracurricular programming activities."
  },
  {
    "objectID": "index.html#python",
    "href": "index.html#python",
    "title": "Allegheny College CIS Course Tech Stack Guide",
    "section": "Python",
    "text": "Python\n\n\nWindows\n\nDownload Python 3.12.5 from the official Python website.\nRun the installer. During installation:\n\nCheck the box that says “Add Python to PATH” before clicking “Install Now”.\nEnsure “Install launcher for all users” is selected.\n\nVerify the installation:\n\nOpen Command Prompt and type:\npython --version\nor\npython3 --version\nEnsure it outputs Python 3.12.5.\n\n\n\n\nLinux (Ubuntu)\nTo install Python 3.12.5 from source:\n\nUpdate your system packages by running:\nsudo apt update && sudo apt upgrade\nInstall the necessary dependencies with:\nsudo apt install -y build-essential libssl-dev zlib1g-dev \\\nlibncurses5-dev libnss3-dev libsqlite3-dev libreadline-dev \\\nlibffi-dev curl libbz2-dev\nDownload the source code for Python 3.12.5 from the official website:\ncurl -O https://www.python.org/ftp/python/3.12.5/Python-3.12.5.tgz\nExtract the downloaded tarball and navigate into the directory:\ntar -xf Python-3.12.5.tgz\ncd Python-3.12.5\nBuild and install Python:\n./configure --enable-optimizations\nmake -j$(nproc)\nsudo make altinstall\nNote: Use altinstall to avoid overwriting the system’s default Python.\nVerify the installation by typing:\npython3.12 --version\nEnsure it outputs Python 3.12.5.\n\n\n\nmacOS\n\nDownload Python 3.12.5 from the official Python website.\nOpen the downloaded .pkg file and follow the on-screen installation instructions.\nVerify the installation:\n\nOpen Terminal and type:\npython3 --version\nEnsure it outputs Python 3.12.5.\n\n\nImportant Note:\nPython 3.12.5 will be the default version used by the ACM Student Chapter for events and workshops. However, please check your course syllabus to ensure you are using the version specified by your instructor, if different."
  },
  {
    "objectID": "index.html#visual-studio-code-vscode",
    "href": "index.html#visual-studio-code-vscode",
    "title": "Allegheny College CIS Course Tech Stack Guide",
    "section": "Visual Studio Code (VSCode)",
    "text": "Visual Studio Code (VSCode)\n\n\nWindows\n\nDownload the installer from the official VSCode website.\nRun the installer and follow the prompts.\nInstall recommended extensions:\n\nOpen VSCode, go to the Extensions view (Ctrl+Shift+X), and search for the following:\n\n“Intellicode”\n“Intellicode API Usage Examples”\n“Python”\n“Jupyter”\n“Markdown All in One”\n“Rainbow CSV”\n“Ruff”\n\nClick “Install” for each.\n\n\n\n\nLinux (Ubuntu)\n\nDownload the latest .deb package from the official VSCode website.\nInstall the .deb package using Terminal:\nsudo dpkg -i code_*.deb\nsudo apt-get install -f\nOpen VSCode and install recommended extensions:\n\nGo to the Extensions view (Ctrl+Shift+X), search for the following, and click “Install”:\n\n“Intellicode”\n“Intellicode API Usage Examples”\n“Python”\n“Jupyter”\n“Markdown All in One”\n“Rainbow CSV”\n“Ruff”\n\n\n\n\n\nmacOS\n\nDownload the installer from the official VSCode website.\nOpen the downloaded file and drag the VSCode icon into the Applications folder.\nInstall recommended extensions:\n\nOpen VSCode, go to the Extensions view (Cmd+Shift+X), and search for the following:\n\n“Intellicode”\n“Intellicode API Usage Examples”\n“Python”\n“Jupyter”\n“Markdown All in One”\n“Rainbow CSV”\n“Ruff”\n\nClick “Install” for each."
  },
  {
    "objectID": "index.html#git-and-github",
    "href": "index.html#git-and-github",
    "title": "Allegheny College CIS Course Tech Stack Guide",
    "section": "Git and GitHub",
    "text": "Git and GitHub\n\n\nStep 1: Install Git\nWindows:\n\nDownload Git from git-scm.com and run the installer.\nDuring installation, select “Use Git from the Windows Command Prompt”.\nVerify the installation:\n\nOpen Command Prompt and type:\ngit --version\n\n\nLinux (Ubuntu):\n\nInstall Git using Terminal:\nsudo apt update && sudo apt install git\nVerify the installation:\ngit --version\n\nmacOS:\n\nInstall Git using Homebrew:\nbrew install git\nVerify the installation:\ngit --version\n\n\n\nStep 2: Create a GitHub Account\n\nGo to github.com.\nClick “Sign Up” and follow the instructions to create an account.\nConfirm your email address when prompted.\n\n\n\nStep 3: Configure Git\n\nOpen your terminal (or Command Prompt).\nSet your Git username and email address:\ngit config --global user.name \"Your Name\"\ngit config --global user.email \"your.email@example.com\"\nNote: Use the email address associated with your GitHub account.\n\n\n\nStep 4: Generate and Add SSH Keys\n\nGenerate a new SSH key:\nssh-keygen -t ed25519 -C \"your.email@example.com\"\nWhen prompted, press Enter to save the key in the default location, and optionally add a passphrase.\nStart the SSH agent:\neval \"$(ssh-agent -s)\"\nAdd your SSH key to the agent:\nssh-add ~/.ssh/id_ed25519\nCopy your public key to your clipboard:\ncat ~/.ssh/id_ed25519.pub\nAdd the key to your GitHub account:\n\nGo to GitHub SSH Settings.\nClick “New SSH Key”, paste your key, and save.\n\n\n\n\nStep 5: Test the SSH Connection\nTest your SSH connection to GitHub:\nssh -T git@github.com\nIf successful, you’ll see a message confirming the connection."
  },
  {
    "objectID": "index.html#discord",
    "href": "index.html#discord",
    "title": "Allegheny College CIS Course Tech Stack Guide",
    "section": "Discord",
    "text": "Discord\n\n\nWindows\n\nDownload Discord from the official website.\nOpen the installer and follow the prompts to install Discord.\nLog in or create an account.\n\n\n\nLinux (Ubuntu)\n\nDownload the .deb package from the Discord website.\nInstall the .deb package:\nsudo dpkg -i discord-*.deb\nsudo apt-get install -f\nOpen Discord from your applications menu.\n\n\n\nmacOS\n\nDownload Discord from the official website.\nOpen the downloaded file and drag the Discord icon into the Applications folder.\nLog in or create an account."
  },
  {
    "objectID": "index.html#asdf",
    "href": "index.html#asdf",
    "title": "Allegheny College CIS Course Tech Stack Guide",
    "section": "asdf",
    "text": "asdf\n\n\nWindows\n\nasdf is not supported natively on Windows. Use WSL and follow the Linux instructions.\n\n\n\nLinux (Ubuntu)\n\nInstall dependencies:\nsudo apt install curl git\nClone the asdf repository:\ngit clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.15.0\nAdd asdf to your shell configuration file (e.g., .bashrc or .zshrc):\n. \"$HOME/.asdf/asdf.sh\"\nRestart your terminal and verify installation:\nasdf --version\n\n\n\nmacOS\n\nInstall Homebrew if not already installed.\nInstall asdf:\nbrew install asdf\nAdd asdf to your shell configuration file (e.g., .zshrc):\n. $(brew --prefix asdf)/libexec/asdf.sh\nRestart your terminal and verify installation:\nasdf --version"
  },
  {
    "objectID": "index.html#devenv",
    "href": "index.html#devenv",
    "title": "Allegheny College CIS Course Tech Stack Guide",
    "section": "devenv",
    "text": "devenv\n\n\nWindows\n\nNot natively supported. Use WSL and follow the Linux instructions.\n\n\n\nLinux (Ubuntu)\n\nInstall the Nix package manager:\ncurl -L https://nixos.org/nix/install | sh\nInstall devenv using Nix:\nnix-env -if https://github.com/cachix/devenv/tarball/latest\nVerify installation:\ndevenv --version\n\n\n\nmacOS\n\nInstall the Nix package manager:\ncurl -L https://nixos.org/nix/install | sh\nInstall devenv using Nix:\nnix-env -if https://github.com/cachix/devenv/tarball/latest\nVerify installation:\ndevenv --version"
  },
  {
    "objectID": "index.html#discord-1",
    "href": "index.html#discord-1",
    "title": "Allegheny College CIS Course Tech Stack Guide",
    "section": "Discord",
    "text": "Discord\n\n\nWindows\n\nDownload Discord from the official website.\nOpen the installer and follow the prompts to install Discord.\nLog in or create an account.\n\n\n\nLinux (Ubuntu)\n\nDownload the .deb package from the Discord website.\nInstall the .deb package:\nsudo dpkg -i discord-*.deb\nsudo apt-get install -f\nOpen Discord from your applications menu.\n\n\n\nmacOS\n\nDownload Discord from the official website.\nOpen the downloaded file and drag the Discord icon into the Applications folder.\nLog in or create an account."
  },
  {
    "objectID": "index.html#execexam",
    "href": "index.html#execexam",
    "title": "Allegheny College CIS Course Tech Stack Guide",
    "section": "execexam",
    "text": "execexam\n\n\nWindows, Linux (Ubuntu), macOS\n\nEnsure Python 3.7 or later is installed.\nInstall execexam using pip:\npip install execexam\nVerify the installation:\nexecexam --help"
  },
  {
    "objectID": "index.html#gatorgrade",
    "href": "index.html#gatorgrade",
    "title": "Allegheny College CIS Course Tech Stack Guide",
    "section": "Gatorgrade",
    "text": "Gatorgrade\n\n\nWindows, Linux (Ubuntu), macOS\n\nEnsure Python 3.8 or later is installed.\nInstall Gatorgrade globally using pip:\npip install gatorgrade\nVerify the installation:\ngatorgrade --help"
  },
  {
    "objectID": "index.html#git-and-ssh-key-setup",
    "href": "index.html#git-and-ssh-key-setup",
    "title": "Allegheny College CIS Course Tech Stack Guide",
    "section": "Git and SSH Key Setup",
    "text": "Git and SSH Key Setup\n\n\nStep 1: Install Git\nWindows:\n\nDownload Git from git-scm.com and run the installer.\nDuring installation, select “Use Git from the Windows Command Prompt”.\nVerify the installation:\n\nOpen Command Prompt and type:\ngit --version\n\n\nLinux (Ubuntu):\n\nInstall Git using Terminal:\nsudo apt update && sudo apt install git\nVerify the installation:\ngit --version\n\nmacOS:\n\nInstall Git using Homebrew:\nbrew install git\nVerify the installation:\ngit --version\n\n\n\nStep 2: Create a GitHub Account\n\nGo to github.com.\nClick “Sign Up” and follow the instructions to create an account.\nConfirm your email address when prompted.\n\n\n\nStep 3: Configure Git\n\nOpen your terminal (or Command Prompt).\nSet your Git username and email address:\ngit config --global user.name \"Your Name\"\ngit config --global user.email \"your.email@example.com\"\nNote: Use the email address associated with your GitHub account.\n\n\n\nStep 4: Generate and Add SSH Keys\n\nGenerate a new SSH key:\nssh-keygen -t ed25519 -C \"your.email@example.com\"\nWhen prompted, press Enter to save the key in the default location, and optionally add a passphrase.\nStart the SSH agent:\neval \"$(ssh-agent -s)\"\nAdd your SSH key to the agent:\nssh-add ~/.ssh/id_ed25519\nCopy your public key to your clipboard:\ncat ~/.ssh/id_ed25519.pub\nAdd the key to your GitHub account:\n\nGo to GitHub SSH Settings.\nClick “New SSH Key”, paste your key, and save.\n\n\n\n\nStep 5: Test the SSH Connection\nTest your SSH connection to GitHub:\nssh -T git@github.com\nIf successful, you’ll see a message confirming the connection."
  },
  {
    "objectID": "index.html#google-colab",
    "href": "index.html#google-colab",
    "title": "Allegheny College CIS Course Tech Stack Guide",
    "section": "Google Colab",
    "text": "Google Colab\n\n\nAll Platforms\n\nOpen your Google Drive and create a folder named Colab Notebooks.\nOpen Google Colab.\nSave your notebook to Google Drive by clicking File &gt; Save a copy in Drive.\nTo find the Colab directory in Google Drive:\n\nOpen Google Drive and look for the Colab Notebooks folder. Any notebooks saved in Colab will automatically appear here.\n\nUploading/downloading notebooks to/from GitHub without Git:\n\nUploading: Download the .ipynb file from GitHub and upload it directly to Google Colab.\nDownloading: Use File &gt; Download &gt; Download .ipynb in Colab to save your notebook and then manually upload it to GitHub."
  },
  {
    "objectID": "index.html#mise",
    "href": "index.html#mise",
    "title": "Allegheny College CIS Course Tech Stack Guide",
    "section": "mise",
    "text": "mise\n\n\nWindows\n\nNot natively supported. Use WSL and follow the Linux instructions.\n\n\n\nLinux (Ubuntu)\n\nInstall mise using the official script:\ncurl https://mise.run | sh\nAdd mise to your shell configuration:\necho 'eval \"$(mise activate bash)\"' &gt;&gt; ~/.bashrc\nRestart your terminal and verify installation:\nmise --version\n\n\n\nmacOS\n\nInstall mise using the official script:\ncurl https://mise.run | sh\nAdd mise to your shell configuration:\necho 'eval \"$(mise activate zsh)\"' &gt;&gt; ~/.zshrc\nRestart your terminal and verify installation:\nmise --version"
  },
  {
    "objectID": "index.html#poetry",
    "href": "index.html#poetry",
    "title": "Allegheny College CIS Course Tech Stack Guide",
    "section": "Poetry",
    "text": "Poetry\n\n\nWindows\n\nOpen Command Prompt or PowerShell.\nInstall Poetry using the official installer:\ncurl -sSL https://install.python-poetry.org | python3 -\nAdd Poetry to your PATH by editing your environment variables or following the on-screen instructions after installation.\nVerify the installation:\npoetry --version\n\n\n\nLinux (Ubuntu)\n\nOpen a terminal.\nInstall Poetry:\ncurl -sSL https://install.python-poetry.org | python3 -\nAdd Poetry to your PATH:\nexport PATH=\"$HOME/.local/bin:$PATH\"\nVerify the installation:\npoetry --version\n\n\n\nmacOS\n\nOpen Terminal.\nInstall Poetry:\ncurl -sSL https://install.python-poetry.org | python3 -\nAdd Poetry to your PATH if necessary.\nVerify the installation:\npoetry --version"
  },
  {
    "objectID": "index.html#python-3.12.5",
    "href": "index.html#python-3.12.5",
    "title": "Allegheny College CIS Course Tech Stack Guide",
    "section": "Python 3.12.5",
    "text": "Python 3.12.5\n\n\nWindows\n\nDownload Python 3.12.5 from the official Python website.\nRun the installer. During installation:\n\nCheck the box that says “Add Python to PATH” before clicking “Install Now”.\nEnsure “Install launcher for all users” is selected.\n\nVerify the installation:\n\nOpen Command Prompt and type:\npython --version\nor\npython3 --version\nEnsure it outputs Python 3.12.5.\n\n\n\n\nLinux (Ubuntu)\nTo install Python 3.12.5 from source:\n\nUpdate your system packages by running:\nsudo apt update && sudo apt upgrade\nInstall the necessary dependencies with:\nsudo apt install -y build-essential libssl-dev zlib1g-dev \\\nlibncurses5-dev libnss3-dev libsqlite3-dev libreadline-dev \\\nlibffi-dev curl libbz2-dev\nDownload the source code for Python 3.12.5 from the official website:\ncurl -O https://www.python.org/ftp/python/3.12.5/Python-3.12.5.tgz\nExtract the downloaded tarball and navigate into the directory:\ntar -xf Python-3.12.5.tgz\ncd Python-3.12.5\nBuild and install Python:\n./configure --enable-optimizations\nmake -j$(nproc)\nsudo make altinstall\nNote: Use altinstall to avoid overwriting the system’s default Python.\nVerify the installation by typing:\npython3.12 --version\nEnsure it outputs Python 3.12.5.\n\n\n\nmacOS\n\nDownload Python 3.12.5 from the official Python website.\nOpen the downloaded .pkg file and follow the on-screen installation instructions.\nVerify the installation:\n\nOpen Terminal and type:\npython3 --version\nEnsure it outputs Python 3.12.5.\n\n\nImportant Note:\nPython 3.12.5 will be the default version used by the ACM Student Chapter for events and workshops. However, please check your course syllabus to ensure you are using the version specified by your instructor, if different."
  },
  {
    "objectID": "index.html#quarto",
    "href": "index.html#quarto",
    "title": "Allegheny College CIS Course Tech Stack Guide",
    "section": "Quarto",
    "text": "Quarto\n\n\nWindows\n\nDownload Quarto from the official website.\nRun the installer and follow the prompts.\nVerify installation:\nquarto check\n\n\n\nLinux (Ubuntu)\n\nDownload the .deb file from the Quarto website.\nInstall it using:\nsudo dpkg -i quarto-*.deb\nVerify installation:\nquarto check\n\n\n\nmacOS\n\nDownload the .pkg file from the Quarto website.\nOpen the file and follow the prompts to install.\nVerify installation:\nquarto check"
  },
  {
    "objectID": "index.html#sublime-text",
    "href": "index.html#sublime-text",
    "title": "Allegheny College CIS Course Tech Stack Guide",
    "section": "Sublime Text",
    "text": "Sublime Text\n\n\nWindows\n\nDownload Sublime Text from the official website.\nOpen the installer and follow the prompts to complete the installation.\nLaunch Sublime Text from the Start menu.\n\n\n\nLinux (Ubuntu)\n\nAdd the Sublime Text repository:\nwget -qO - https://download.sublimetext.com/sublimehq-pub.gpg | sudo apt-key add -\necho \"deb https://download.sublimetext.com/ apt/stable/\" | sudo tee /etc/apt/sources.list.d/sublime-text.list\nUpdate and install Sublime Text:\nsudo apt update\nsudo apt install sublime-text\n\n\n\nmacOS\n\nDownload Sublime Text from the official website.\nOpen the downloaded file and drag the Sublime Text icon into the Applications folder.\nLaunch Sublime Text from Spotlight or the Applications folder."
  },
  {
    "objectID": "index.html#visual-studio-code-vscode-1",
    "href": "index.html#visual-studio-code-vscode-1",
    "title": "Allegheny College CIS Course Tech Stack Guide",
    "section": "Visual Studio Code (VSCode)",
    "text": "Visual Studio Code (VSCode)\n\n\nWindows\n\nDownload the installer from the official VSCode website.\nRun the installer and follow the prompts.\nInstall recommended extensions:\n\nOpen VSCode, go to the Extensions view (Ctrl+Shift+X), and search for the following:\n\n“Intellicode”\n“Intellicode API Usage Examples”\n“Python”\n“Jupyter”\n“Markdown All in One”\n“Rainbow CSV”\n“Ruff”\n\nClick “Install” for each.\n\n\n\n\nLinux (Ubuntu)\n\nDownload the latest .deb package from the official VSCode website.\nInstall the .deb package using Terminal:\nsudo dpkg -i code_*.deb\nsudo apt-get install -f\nOpen VSCode and install recommended extensions:\n\nGo to the Extensions view (Ctrl+Shift+X), search for the following, and click “Install”:\n\n“Intellicode”\n“Intellicode API Usage Examples”\n“Python”\n“Jupyter”\n“Markdown All in One”\n“Rainbow CSV”\n“Ruff”\n\n\n\n\n\nmacOS\n\nDownload the installer from the official VSCode website.\nOpen the downloaded file and drag the VSCode icon into the Applications folder.\nInstall recommended extensions:\n\nOpen VSCode, go to the Extensions view (Cmd+Shift+X), and search for the following:\n\n“Intellicode”\n“Intellicode API Usage Examples”\n“Python”\n“Jupyter”\n“Markdown All in One”\n“Rainbow CSV”\n“Ruff”\n\nClick “Install” for each."
  },
  {
    "objectID": "index.html#vpython-library",
    "href": "index.html#vpython-library",
    "title": "Allegheny College CIS Course Tech Stack Guide",
    "section": "VPython Library",
    "text": "VPython Library\n\n\nWindows, Linux (Ubuntu), macOS\n\nEnsure Python 3.7 or later is installed.\nInstall VPython using pip:\npip install vpython\nVerify installation by running a simple VPython script:\nfrom vpython import sphere\nsphere()\nThis should open a window with a rendered 3D sphere."
  },
  {
    "objectID": "posts/workshops/local_llm.html",
    "href": "posts/workshops/local_llm.html",
    "title": "Personal Chatbot Workshop",
    "section": "",
    "text": "Date: April 9, 2025\nTime: 4:00 PM – 6:00 PM\nLocation: Alden Hall, Room 101\nInstructor: Alish Chhetri\n\n\n\n\nThis workshop will show participants how to set up their own personal AI chatbot on their computer using a tool called Ollama and the Deepseek language model. The goal is to make it as simple as possible for anyone, including those with no coding or AI experience, to run a chatbot similar to ChatGPT entirely on their own machine.\n\n\n\n\n\nA basic personal chatbot that you can run on your computer, talk to, and customize.\n\n\n\nInstalling the required tools:\n\nVisual Studio Code\nPython\nOllama\n\n\n\n\nUsing Ollama to download and run the Deepseek model.\n\n\n\nHow to talk to your chatbot through the terminal or a simple interface.\n\n\n\nEditing a few lines to change how the chatbot responds or what kind of personality it has.\n\n\n\n\n\nVisual Studio Code installed\nPython 3.12.8\nNo coding or technical experience needed\n\n\n\n\nBy the end of the session, participants will:\n\nHave a working AI chatbot running on their own computer\nUnderstand how to use it and adjust its basic behavior\nFeel confident experimenting with it on their own after the workshop\n\n\n\n\nPlease install the following software before attending the workshop to ensure a smooth experience:\n\n\n\n\n\nDownload the installer from the official VSCode website.\nRun the installer and follow the prompts.\nInstall recommended extensions:\n\nOpen VSCode, go to the Extensions view (Ctrl+Shift+X), and search for the following:\n\n“Intellicode”\n“Intellicode API Usage Examples”\n“Python”\n“Jupyter”\n“Markdown All in One”\n“Rainbow CSV”\n“Ruff”\n\nClick “Install” for each.\n\n\n\n\n\n\nDownload the latest .deb package from the official VSCode website.\nInstall the .deb package using Terminal:\nsudo dpkg -i code_*.deb\nsudo apt-get install -f\nOpen VSCode and install recommended extensions:\n\nGo to the Extensions view (Ctrl+Shift+X), search for the following, and click “Install”:\n\n“Intellicode”\n“Intellicode API Usage Examples”\n“Python”\n“Ruff”\n\n\n\n\n\n\n\nDownload the installer from the official VSCode website.\nOpen the downloaded file and drag the VSCode icon into the Applications folder.\nInstall recommended extensions:\n\nOpen VSCode, go to the Extensions view (Cmd+Shift+X), and search for the following:\n\n“Intellicode”\n“Intellicode API Usage Examples”\n“Python”\n“Jupyter”\n“Markdown All in One”\n“Rainbow CSV”\n“Ruff”\n\nClick “Install” for each.\n\n\n\n\n\n\n\n\n\nDownload Python 3.12.8 from the official Python website.\nRun the installer. During installation:\n\nCheck the box that says “Add Python to PATH” before clicking “Install Now”.\nEnsure “Install launcher for all users” is selected.\n\nVerify the installation:\n\nOpen Command Prompt and type:\npython --version\nor\npython3 --version\nEnsure it outputs Python 3.12.8.\n\n\n\n\n\nTo install Python 3.12.8 from source:\n\nUpdate your system packages by running:\nsudo apt update && sudo apt upgrade\nInstall the necessary dependencies with:\nsudo apt install -y build-essential libssl-dev zlib1g-dev \\\nlibncurses5-dev libnss3-dev libsqlite3-dev libreadline-dev \\\nlibffi-dev curl libbz2-dev\nDownload the source code for Python 3.12.8 from the official website:\ncurl -O https://www.python.org/ftp/python/3.12.8/Python-3.12.8.tgz\nExtract the downloaded tarball and navigate into the directory:\ntar -xf Python-3.12.8.tgz\ncd Python-3.12.8\nBuild and install Python:\n./configure --enable-optimizations\nmake -j$(nproc)\nsudo make altinstall\nNote: Use altinstall to avoid overwriting the system’s default Python.\nVerify the installation by typing:\npython3.12 --version\nEnsure it outputs Python 3.12.8.\n\n\n\n\n\nDownload Python 3.12.8 from the official Python website.\nOpen the downloaded .pkg file and follow the on-screen installation instructions.\nVerify the installation:\n\nOpen Terminal and type:\npython3 --version\nEnsure it outputs Python 3.12.8.\n\n\nImportant Note:\nPython 3.12.8 will be the default version used by the ACM Student Chapter for events and workshops. However, please check your course syllabus to ensure you are using the version specified by your instructor, if different.\n\n\n\n\n\n\n\nDownload the installer from the official VSCode website.\nRun the installer and follow the prompts.\nInstall recommended extensions:\n\nOpen VSCode, go to the Extensions view (Ctrl+Shift+X), and search for the following:\n\n“Intellicode”\n“Intellicode API Usage Examples”\n“Python”\n“Jupyter”\n“Markdown All in One”\n“Rainbow CSV”\n“Ruff”\n\nClick “Install” for each.\n\n\n\n\n\n\nDownload the latest .deb package from the official VSCode website.\nInstall the .deb package using Terminal:\nsudo dpkg -i code_*.deb\nsudo apt-get install -f\nOpen VSCode and install recommended extensions:\n\nGo to the Extensions view (Ctrl+Shift+X), search for the following, and click “Install”:\n\n“Intellicode”\n“Intellicode API Usage Examples”\n“Python”\n“Jupyter”\n“Markdown All in One”\n“Rainbow CSV”\n“Ruff”\n\n\n\n\n\n\n\nDownload the installer from the official VSCode website.\nOpen the downloaded file and drag the VSCode icon into the Applications folder.\nInstall recommended extensions:\n\nOpen VSCode, go to the Extensions view (Cmd+Shift+X), and search for the following:\n\n“Intellicode”\n“Intellicode API Usage Examples”\n“Python”\n“Jupyter”\n“Markdown All in One”\n“Rainbow CSV”\n“Ruff”\n\nClick “Install” for each.\n\n\n\n\n\n\n\n\n\nDownload the latest Windows installer from Ollama’s website.\nRun the installer and follow the prompts.\nVerify installation by opening Command Prompt and typing:\nollama --version\n\n\n\n\n\nOpen Terminal and run:\ncurl -fsSL https://ollama.ai/install.sh | sh\nVerify installation:\nollama --version\n\n\n\n\n\nDownload the macOS application from Ollama’s website.\nOpen the downloaded file and drag the Ollama icon to your Applications folder.\nLaunch Ollama from your Applications folder.\nOpen Terminal and verify with:\nollama --version\n\n\n\n\n\n\nOllama Documentation\n\nIf you encounter issues with any installations, please arrive 15 minutes early to the workshop, and we’ll help you get set up."
  },
  {
    "objectID": "posts/workshops/local_llm.html#event-details",
    "href": "posts/workshops/local_llm.html#event-details",
    "title": "Personal Chatbot Workshop",
    "section": "",
    "text": "Date: April 9, 2025\nTime: 4:00 PM – 6:00 PM\nLocation: Alden Hall, Room 101\nInstructor: Alish Chhetri"
  },
  {
    "objectID": "posts/workshops/local_llm.html#workshop-purpose",
    "href": "posts/workshops/local_llm.html#workshop-purpose",
    "title": "Personal Chatbot Workshop",
    "section": "",
    "text": "This workshop will show participants how to set up their own personal AI chatbot on their computer using a tool called Ollama and the Deepseek language model. The goal is to make it as simple as possible for anyone, including those with no coding or AI experience, to run a chatbot similar to ChatGPT entirely on their own machine."
  },
  {
    "objectID": "posts/workshops/local_llm.html#what-will-be-covered",
    "href": "posts/workshops/local_llm.html#what-will-be-covered",
    "title": "Personal Chatbot Workshop",
    "section": "",
    "text": "A basic personal chatbot that you can run on your computer, talk to, and customize.\n\n\n\nInstalling the required tools:\n\nVisual Studio Code\nPython\nOllama\n\n\n\n\nUsing Ollama to download and run the Deepseek model.\n\n\n\nHow to talk to your chatbot through the terminal or a simple interface.\n\n\n\nEditing a few lines to change how the chatbot responds or what kind of personality it has."
  },
  {
    "objectID": "posts/workshops/local_llm.html#requirements-for-participants",
    "href": "posts/workshops/local_llm.html#requirements-for-participants",
    "title": "Personal Chatbot Workshop",
    "section": "",
    "text": "Visual Studio Code installed\nPython 3.12.8\nNo coding or technical experience needed"
  },
  {
    "objectID": "posts/workshops/local_llm.html#expected-outcomes",
    "href": "posts/workshops/local_llm.html#expected-outcomes",
    "title": "Personal Chatbot Workshop",
    "section": "",
    "text": "By the end of the session, participants will:\n\nHave a working AI chatbot running on their own computer\nUnderstand how to use it and adjust its basic behavior\nFeel confident experimenting with it on their own after the workshop"
  },
  {
    "objectID": "posts/workshops/local_llm.html#pre-workshop-setup",
    "href": "posts/workshops/local_llm.html#pre-workshop-setup",
    "title": "Personal Chatbot Workshop",
    "section": "",
    "text": "Please install the following software before attending the workshop to ensure a smooth experience:\n\n\n\n\n\nDownload the installer from the official VSCode website.\nRun the installer and follow the prompts.\nInstall recommended extensions:\n\nOpen VSCode, go to the Extensions view (Ctrl+Shift+X), and search for the following:\n\n“Intellicode”\n“Intellicode API Usage Examples”\n“Python”\n“Jupyter”\n“Markdown All in One”\n“Rainbow CSV”\n“Ruff”\n\nClick “Install” for each.\n\n\n\n\n\n\nDownload the latest .deb package from the official VSCode website.\nInstall the .deb package using Terminal:\nsudo dpkg -i code_*.deb\nsudo apt-get install -f\nOpen VSCode and install recommended extensions:\n\nGo to the Extensions view (Ctrl+Shift+X), search for the following, and click “Install”:\n\n“Intellicode”\n“Intellicode API Usage Examples”\n“Python”\n“Ruff”\n\n\n\n\n\n\n\nDownload the installer from the official VSCode website.\nOpen the downloaded file and drag the VSCode icon into the Applications folder.\nInstall recommended extensions:\n\nOpen VSCode, go to the Extensions view (Cmd+Shift+X), and search for the following:\n\n“Intellicode”\n“Intellicode API Usage Examples”\n“Python”\n“Jupyter”\n“Markdown All in One”\n“Rainbow CSV”\n“Ruff”\n\nClick “Install” for each.\n\n\n\n\n\n\n\n\n\nDownload Python 3.12.8 from the official Python website.\nRun the installer. During installation:\n\nCheck the box that says “Add Python to PATH” before clicking “Install Now”.\nEnsure “Install launcher for all users” is selected.\n\nVerify the installation:\n\nOpen Command Prompt and type:\npython --version\nor\npython3 --version\nEnsure it outputs Python 3.12.8.\n\n\n\n\n\nTo install Python 3.12.8 from source:\n\nUpdate your system packages by running:\nsudo apt update && sudo apt upgrade\nInstall the necessary dependencies with:\nsudo apt install -y build-essential libssl-dev zlib1g-dev \\\nlibncurses5-dev libnss3-dev libsqlite3-dev libreadline-dev \\\nlibffi-dev curl libbz2-dev\nDownload the source code for Python 3.12.8 from the official website:\ncurl -O https://www.python.org/ftp/python/3.12.8/Python-3.12.8.tgz\nExtract the downloaded tarball and navigate into the directory:\ntar -xf Python-3.12.8.tgz\ncd Python-3.12.8\nBuild and install Python:\n./configure --enable-optimizations\nmake -j$(nproc)\nsudo make altinstall\nNote: Use altinstall to avoid overwriting the system’s default Python.\nVerify the installation by typing:\npython3.12 --version\nEnsure it outputs Python 3.12.8.\n\n\n\n\n\nDownload Python 3.12.8 from the official Python website.\nOpen the downloaded .pkg file and follow the on-screen installation instructions.\nVerify the installation:\n\nOpen Terminal and type:\npython3 --version\nEnsure it outputs Python 3.12.8.\n\n\nImportant Note:\nPython 3.12.8 will be the default version used by the ACM Student Chapter for events and workshops. However, please check your course syllabus to ensure you are using the version specified by your instructor, if different.\n\n\n\n\n\n\n\nDownload the installer from the official VSCode website.\nRun the installer and follow the prompts.\nInstall recommended extensions:\n\nOpen VSCode, go to the Extensions view (Ctrl+Shift+X), and search for the following:\n\n“Intellicode”\n“Intellicode API Usage Examples”\n“Python”\n“Jupyter”\n“Markdown All in One”\n“Rainbow CSV”\n“Ruff”\n\nClick “Install” for each.\n\n\n\n\n\n\nDownload the latest .deb package from the official VSCode website.\nInstall the .deb package using Terminal:\nsudo dpkg -i code_*.deb\nsudo apt-get install -f\nOpen VSCode and install recommended extensions:\n\nGo to the Extensions view (Ctrl+Shift+X), search for the following, and click “Install”:\n\n“Intellicode”\n“Intellicode API Usage Examples”\n“Python”\n“Jupyter”\n“Markdown All in One”\n“Rainbow CSV”\n“Ruff”\n\n\n\n\n\n\n\nDownload the installer from the official VSCode website.\nOpen the downloaded file and drag the VSCode icon into the Applications folder.\nInstall recommended extensions:\n\nOpen VSCode, go to the Extensions view (Cmd+Shift+X), and search for the following:\n\n“Intellicode”\n“Intellicode API Usage Examples”\n“Python”\n“Jupyter”\n“Markdown All in One”\n“Rainbow CSV”\n“Ruff”\n\nClick “Install” for each.\n\n\n\n\n\n\n\n\n\nDownload the latest Windows installer from Ollama’s website.\nRun the installer and follow the prompts.\nVerify installation by opening Command Prompt and typing:\nollama --version\n\n\n\n\n\nOpen Terminal and run:\ncurl -fsSL https://ollama.ai/install.sh | sh\nVerify installation:\nollama --version\n\n\n\n\n\nDownload the macOS application from Ollama’s website.\nOpen the downloaded file and drag the Ollama icon to your Applications folder.\nLaunch Ollama from your Applications folder.\nOpen Terminal and verify with:\nollama --version\n\n\n\n\n\n\nOllama Documentation\n\nIf you encounter issues with any installations, please arrive 15 minutes early to the workshop, and we’ll help you get set up."
  },
  {
    "objectID": "posts/classes/101.html",
    "href": "posts/classes/101.html",
    "title": "CMPSC 101 - Data Structures Setup Guide",
    "section": "",
    "text": "Spring Semester, 2024-2025 Academic Year\n\n\nWelcome to the Allegheny College CIS Course Tech Stack Guide for CMPSC 101 - Data Structures. This document was created by the Allegheny College ACM Student Chapter as part of our “SOS (Set-up Our Students) Week” initiative. It is designed to help students enrolled in CMPSC 101 get set up with the necessary tools and software for their class.\nOur goal is to make the setup process simple and stress-free, so you can focus on learning and excelling in your coursework. Whether you’re a beginner or an experienced programmer, this guide is here to provide step-by-step instructions, useful tips, and links to resources for all the tools you’ll need.\n\n\n\n\n\n\n\n\nWindows:\n\nDownload Git from git-scm.com and run the installer.\nDuring installation, select “Use Git from the Windows Command Prompt”.\nVerify the installation:\n\nOpen Command Prompt and type:\ngit --version\n\n\nLinux (Ubuntu):\n\nInstall Git using Terminal:\nsudo apt update && sudo apt install git\nVerify the installation:\ngit --version\n\nmacOS:\n\nInstall Git using Homebrew:\nbrew install git\nVerify the installation:\ngit --version\n\n\n\n\n\nGo to github.com.\nClick “Sign Up” and follow the instructions to create an account.\nConfirm your email address when prompted.\n\n\n\n\n\nOpen your terminal (or Command Prompt).\nSet your Git username and email address:\ngit config --global user.name \"Your Name\"\ngit config --global user.email \"your.email@example.com\"\nNote: Use the email address associated with your GitHub account.\n\n\n\n\n\nGenerate a new SSH key:\nssh-keygen -t ed25519 -C \"your.email@example.com\"\nWhen prompted, press Enter to save the key in the default location, and optionally add a passphrase.\nStart the SSH agent:\neval \"$(ssh-agent -s)\"\nAdd your SSH key to the agent:\nssh-add ~/.ssh/id_ed25519\nCopy your public key to your clipboard:\ncat ~/.ssh/id_ed25519.pub\nAdd the key to your GitHub account:\n\nGo to GitHub SSH Settings.\nClick “New SSH Key”, paste your key, and save.\n\n\n\n\n\nTest your SSH connection to GitHub:\nssh -T git@github.com\nIf successful, you’ll see a message confirming the connection.\n\n\n\n\n\n\n\n\n\nDownload Python 3.12.5 from the official Python website.\nRun the installer. During installation:\n\nCheck the box that says “Add Python to PATH” before clicking “Install Now”.\nEnsure “Install launcher for all users” is selected.\n\nVerify the installation:\n\nOpen Command Prompt and type:\npython --version\nor\npython3 --version\nEnsure it outputs Python 3.12.5.\n\n\n\n\n\nTo install Python 3.12.5 from source:\n\nUpdate your system packages by running:\nsudo apt update && sudo apt upgrade\nInstall the necessary dependencies with:\nsudo apt install -y build-essential libssl-dev zlib1g-dev \\\nlibncurses5-dev libnss3-dev libsqlite3-dev libreadline-dev \\\nlibffi-dev curl libbz2-dev\nDownload the source code for Python 3.12.5 from the official website:\ncurl -O https://www.python.org/ftp/python/3.12.5/Python-3.12.5.tgz\nExtract the downloaded tarball and navigate into the directory:\ntar -xf Python-3.12.5.tgz\ncd Python-3.12.5\nBuild and install Python:\n./configure --enable-optimizations\nmake -j$(nproc)\nsudo make altinstall\nNote: Use altinstall to avoid overwriting the system’s default Python.\nVerify the installation by typing:\npython3.12 --version\nEnsure it outputs Python 3.12.5.\n\n\n\n\n\nDownload Python 3.12.5 from the official Python website.\nOpen the downloaded .pkg file and follow the on-screen installation instructions.\nVerify the installation:\n\nOpen Terminal and type:\npython3 --version\nEnsure it outputs Python 3.12.5.\n\n\nImportant Note:\nPython 3.12.5 will be the default version used by the ACM Student Chapter for events and workshops. However, please check your course syllabus to ensure you are using the version specified by your instructor, if different.\n\n\n\n\n\n\n\n\nOpen Command Prompt or PowerShell.\nInstall Poetry using the official installer:\ncurl -sSL https://install.python-poetry.org | python3 -\nAdd Poetry to your PATH by editing your environment variables or following the on-screen instructions after installation.\nVerify the installation:\npoetry --version\n\n\n\n\n\nOpen a terminal.\nInstall Poetry:\ncurl -sSL https://install.python-poetry.org | python3 -\nAdd Poetry to your PATH:\nexport PATH=\"$HOME/.local/bin:$PATH\"\nVerify the installation:\npoetry --version\n\n\n\n\n\nOpen Terminal.\nInstall Poetry:\ncurl -sSL https://install.python-poetry.org | python3 -\nAdd Poetry to your PATH if necessary.\nVerify the installation:\npoetry --version\n\n\n\n\n\n\n\n\n\n\nEnsure Python 3.8 or later is installed.\nInstall Gatorgrade globally using pip:\npip install gatorgrade\nVerify the installation:\ngatorgrade --help\n\n\n\n\n\n\n\n\n\n\nDownload Sublime Text from the official website.\nOpen the installer and follow the prompts to complete the installation.\nLaunch Sublime Text from the Start menu.\n\n\n\n\n\nAdd the Sublime Text repository:\nwget -qO - https://download.sublimetext.com/sublimehq-pub.gpg | sudo apt-key add -\necho \"deb https://download.sublimetext.com/ apt/stable/\" | sudo tee /etc/apt/sources.list.d/sublime-text.list\nUpdate and install Sublime Text:\nsudo apt update\nsudo apt install sublime-text\n\n\n\n\n\nDownload Sublime Text from the official website.\nOpen the downloaded file and drag the Sublime Text icon into the Applications folder.\nLaunch Sublime Text from Spotlight or the Applications folder.\n\n\n\n\n\n\n\n\n\n\nDownload Discord from the official website.\nOpen the installer and follow the prompts to install Discord.\nLog in or create an account.\n\n\n\n\n\nDownload the .deb package from the Discord website.\nInstall the .deb package:\nsudo dpkg -i discord-*.deb\nsudo apt-get install -f\nOpen Discord from your applications menu.\n\n\n\n\n\nDownload Discord from the official website.\nOpen the downloaded file and drag the Discord icon into the Applications folder.\nLog in or create an account.\n\n\n\n\n\n\n\nFor more details, refer to the official course software installation guide.\n\nBy completing these setup steps, you’ll be well-prepared for your CMPSC 101 coursework. If you encounter any issues, feel free to reach out through the course’s Discord channel or attend the ACM SOS Week sessions for assistance."
  },
  {
    "objectID": "posts/classes/101.html#introduction",
    "href": "posts/classes/101.html#introduction",
    "title": "CMPSC 101 - Data Structures Setup Guide",
    "section": "",
    "text": "Welcome to the Allegheny College CIS Course Tech Stack Guide for CMPSC 101 - Data Structures. This document was created by the Allegheny College ACM Student Chapter as part of our “SOS (Set-up Our Students) Week” initiative. It is designed to help students enrolled in CMPSC 101 get set up with the necessary tools and software for their class.\nOur goal is to make the setup process simple and stress-free, so you can focus on learning and excelling in your coursework. Whether you’re a beginner or an experienced programmer, this guide is here to provide step-by-step instructions, useful tips, and links to resources for all the tools you’ll need."
  },
  {
    "objectID": "posts/classes/101.html#cmpsc-101-required-software",
    "href": "posts/classes/101.html#cmpsc-101-required-software",
    "title": "CMPSC 101 - Data Structures Setup Guide",
    "section": "",
    "text": "Windows:\n\nDownload Git from git-scm.com and run the installer.\nDuring installation, select “Use Git from the Windows Command Prompt”.\nVerify the installation:\n\nOpen Command Prompt and type:\ngit --version\n\n\nLinux (Ubuntu):\n\nInstall Git using Terminal:\nsudo apt update && sudo apt install git\nVerify the installation:\ngit --version\n\nmacOS:\n\nInstall Git using Homebrew:\nbrew install git\nVerify the installation:\ngit --version\n\n\n\n\n\nGo to github.com.\nClick “Sign Up” and follow the instructions to create an account.\nConfirm your email address when prompted.\n\n\n\n\n\nOpen your terminal (or Command Prompt).\nSet your Git username and email address:\ngit config --global user.name \"Your Name\"\ngit config --global user.email \"your.email@example.com\"\nNote: Use the email address associated with your GitHub account.\n\n\n\n\n\nGenerate a new SSH key:\nssh-keygen -t ed25519 -C \"your.email@example.com\"\nWhen prompted, press Enter to save the key in the default location, and optionally add a passphrase.\nStart the SSH agent:\neval \"$(ssh-agent -s)\"\nAdd your SSH key to the agent:\nssh-add ~/.ssh/id_ed25519\nCopy your public key to your clipboard:\ncat ~/.ssh/id_ed25519.pub\nAdd the key to your GitHub account:\n\nGo to GitHub SSH Settings.\nClick “New SSH Key”, paste your key, and save.\n\n\n\n\n\nTest your SSH connection to GitHub:\nssh -T git@github.com\nIf successful, you’ll see a message confirming the connection.\n\n\n\n\n\n\n\n\n\nDownload Python 3.12.5 from the official Python website.\nRun the installer. During installation:\n\nCheck the box that says “Add Python to PATH” before clicking “Install Now”.\nEnsure “Install launcher for all users” is selected.\n\nVerify the installation:\n\nOpen Command Prompt and type:\npython --version\nor\npython3 --version\nEnsure it outputs Python 3.12.5.\n\n\n\n\n\nTo install Python 3.12.5 from source:\n\nUpdate your system packages by running:\nsudo apt update && sudo apt upgrade\nInstall the necessary dependencies with:\nsudo apt install -y build-essential libssl-dev zlib1g-dev \\\nlibncurses5-dev libnss3-dev libsqlite3-dev libreadline-dev \\\nlibffi-dev curl libbz2-dev\nDownload the source code for Python 3.12.5 from the official website:\ncurl -O https://www.python.org/ftp/python/3.12.5/Python-3.12.5.tgz\nExtract the downloaded tarball and navigate into the directory:\ntar -xf Python-3.12.5.tgz\ncd Python-3.12.5\nBuild and install Python:\n./configure --enable-optimizations\nmake -j$(nproc)\nsudo make altinstall\nNote: Use altinstall to avoid overwriting the system’s default Python.\nVerify the installation by typing:\npython3.12 --version\nEnsure it outputs Python 3.12.5.\n\n\n\n\n\nDownload Python 3.12.5 from the official Python website.\nOpen the downloaded .pkg file and follow the on-screen installation instructions.\nVerify the installation:\n\nOpen Terminal and type:\npython3 --version\nEnsure it outputs Python 3.12.5.\n\n\nImportant Note:\nPython 3.12.5 will be the default version used by the ACM Student Chapter for events and workshops. However, please check your course syllabus to ensure you are using the version specified by your instructor, if different.\n\n\n\n\n\n\n\n\nOpen Command Prompt or PowerShell.\nInstall Poetry using the official installer:\ncurl -sSL https://install.python-poetry.org | python3 -\nAdd Poetry to your PATH by editing your environment variables or following the on-screen instructions after installation.\nVerify the installation:\npoetry --version\n\n\n\n\n\nOpen a terminal.\nInstall Poetry:\ncurl -sSL https://install.python-poetry.org | python3 -\nAdd Poetry to your PATH:\nexport PATH=\"$HOME/.local/bin:$PATH\"\nVerify the installation:\npoetry --version\n\n\n\n\n\nOpen Terminal.\nInstall Poetry:\ncurl -sSL https://install.python-poetry.org | python3 -\nAdd Poetry to your PATH if necessary.\nVerify the installation:\npoetry --version\n\n\n\n\n\n\n\n\n\n\nEnsure Python 3.8 or later is installed.\nInstall Gatorgrade globally using pip:\npip install gatorgrade\nVerify the installation:\ngatorgrade --help\n\n\n\n\n\n\n\n\n\n\nDownload Sublime Text from the official website.\nOpen the installer and follow the prompts to complete the installation.\nLaunch Sublime Text from the Start menu.\n\n\n\n\n\nAdd the Sublime Text repository:\nwget -qO - https://download.sublimetext.com/sublimehq-pub.gpg | sudo apt-key add -\necho \"deb https://download.sublimetext.com/ apt/stable/\" | sudo tee /etc/apt/sources.list.d/sublime-text.list\nUpdate and install Sublime Text:\nsudo apt update\nsudo apt install sublime-text\n\n\n\n\n\nDownload Sublime Text from the official website.\nOpen the downloaded file and drag the Sublime Text icon into the Applications folder.\nLaunch Sublime Text from Spotlight or the Applications folder.\n\n\n\n\n\n\n\n\n\n\nDownload Discord from the official website.\nOpen the installer and follow the prompts to install Discord.\nLog in or create an account.\n\n\n\n\n\nDownload the .deb package from the Discord website.\nInstall the .deb package:\nsudo dpkg -i discord-*.deb\nsudo apt-get install -f\nOpen Discord from your applications menu.\n\n\n\n\n\nDownload Discord from the official website.\nOpen the downloaded file and drag the Discord icon into the Applications folder.\nLog in or create an account."
  },
  {
    "objectID": "posts/classes/101.html#additional-resources",
    "href": "posts/classes/101.html#additional-resources",
    "title": "CMPSC 101 - Data Structures Setup Guide",
    "section": "",
    "text": "For more details, refer to the official course software installation guide.\n\nBy completing these setup steps, you’ll be well-prepared for your CMPSC 101 coursework. If you encounter any issues, feel free to reach out through the course’s Discord channel or attend the ACM SOS Week sessions for assistance."
  },
  {
    "objectID": "posts/classes/302.html",
    "href": "posts/classes/302.html",
    "title": "CMPSC 302 - Web Design Setup Guide",
    "section": "",
    "text": "Spring Semester, 2024-2025 Academic Year\n\n\nWelcome to the Allegheny College CIS Course Tech Stack Guide for CMPSC 302 - Web Design. This document was created by the Allegheny College ACM Student Chapter as part of our “SOS (Set-up Our Students) Week” initiative. It is designed to help students enrolled in CMPSC 302 get set up with the necessary tools and software for their class.\nOur goal is to make the setup process simple and stress-free, so you can focus on learning and excelling in your coursework. Whether you’re a beginner or an experienced programmer, this guide is here to provide step-by-step instructions, useful tips, and links to resources for all the tools you’ll need.\n\n\n\n\n\n\n\n\nWindows:\n\nDownload Git from git-scm.com and run the installer.\nDuring installation, select “Use Git from the Windows Command Prompt”.\nVerify the installation:\n\nOpen Command Prompt and type:\ngit --version\n\n\nLinux (Ubuntu):\n\nInstall Git using Terminal:\nsudo apt update && sudo apt install git\nVerify the installation:\ngit --version\n\nmacOS:\n\nInstall Git using Homebrew:\nbrew install git\nVerify the installation:\ngit --version\n\n\n\n\n\nGo to github.com.\nClick “Sign Up” and follow the instructions to create an account.\nConfirm your email address when prompted.\n\n\n\n\n\nOpen your terminal (or Command Prompt).\nSet your Git username and email address:\ngit config --global user.name \"Your Name\"\ngit config --global user.email \"your.email@example.com\"\nNote: Use the email address associated with your GitHub account.\n\n\n\n\n\nGenerate a new SSH key:\nssh-keygen -t ed25519 -C \"your.email@example.com\"\nWhen prompted, press Enter to save the key in the default location, and optionally add a passphrase.\nStart the SSH agent:\neval \"$(ssh-agent -s)\"\nAdd your SSH key to the agent:\nssh-add ~/.ssh/id_ed25519\nCopy your public key to your clipboard:\ncat ~/.ssh/id_ed25519.pub\nAdd the key to your GitHub account:\n\nGo to GitHub SSH Settings.\nClick “New SSH Key”, paste your key, and save.\n\n\n\n\n\nTest your SSH connection to GitHub:\nssh -T git@github.com\nIf successful, you’ll see a message confirming the connection.\n\n\n\n\n\n\n\n\n\nDownload Python 3.12.5 from the official Python website.\nRun the installer. During installation:\n\nCheck the box that says “Add Python to PATH” before clicking “Install Now”.\nEnsure “Install launcher for all users” is selected.\n\nVerify the installation:\n\nOpen Command Prompt and type:\npython --version\nor\npython3 --version\nEnsure it outputs Python 3.12.5.\n\n\n\n\n\nTo install Python 3.12.5 from source:\n\nUpdate your system packages by running:\nsudo apt update && sudo apt upgrade\nInstall the necessary dependencies with:\nsudo apt install -y build-essential libssl-dev zlib1g-dev \\\nlibncurses5-dev libnss3-dev libsqlite3-dev libreadline-dev \\\nlibffi-dev curl libbz2-dev\nDownload the source code for Python 3.12.5 from the official website:\ncurl -O https://www.python.org/ftp/python/3.12.5/Python-3.12.5.tgz\nExtract the downloaded tarball and navigate into the directory:\ntar -xf Python-3.12.5.tgz\ncd Python-3.12.5\nBuild and install Python:\n./configure --enable-optimizations\nmake -j$(nproc)\nsudo make altinstall\nNote: Use altinstall to avoid overwriting the system’s default Python.\nVerify the installation by typing:\npython3.12 --version\nEnsure it outputs Python 3.12.5.\n\n\n\n\n\nDownload Python 3.12.5 from the official Python website.\nOpen the downloaded .pkg file and follow the on-screen installation instructions.\nVerify the installation:\n\nOpen Terminal and type:\npython3 --version\nEnsure it outputs Python 3.12.5.\n\n\nImportant Note:\nPython 3.12.5 will be the default version used by the ACM Student Chapter for events and workshops. However, please check your course syllabus to ensure you are using the version specified by your instructor, if different.\n\n\n\n\n\n\n\n\n\nDownload the installer from the official VSCode website.\nRun the installer and follow the prompts.\nInstall recommended extensions:\n\nOpen VSCode, go to the Extensions view (Ctrl+Shift+X), and search for the following:\n\n“Intellicode”\n“Intellicode API Usage Examples”\n“Python”\n“Jupyter”\n“Markdown All in One”\n“Rainbow CSV”\n“Ruff”\n\nClick “Install” for each.\n\n\n\n\n\n\nDownload the latest .deb package from the official VSCode website.\nInstall the .deb package using Terminal:\nsudo dpkg -i code_*.deb\nsudo apt-get install -f\nOpen VSCode and install recommended extensions:\n\nGo to the Extensions view (Ctrl+Shift+X), search for the following, and click “Install”:\n\n“Intellicode”\n“Intellicode API Usage Examples”\n“Python”\n“Jupyter”\n“Markdown All in One”\n“Rainbow CSV”\n“Ruff”\n\n\n\n\n\n\n\nDownload the installer from the official VSCode website.\nOpen the downloaded file and drag the VSCode icon into the Applications folder.\nInstall recommended extensions:\n\nOpen VSCode, go to the Extensions view (Cmd+Shift+X), and search for the following:\n\n“Intellicode”\n“Intellicode API Usage Examples”\n“Python”\n“Jupyter”\n“Markdown All in One”\n“Rainbow CSV”\n“Ruff”\n\nClick “Install” for each.\n\n\n\nBy completing these setup steps, you’ll be well-prepared for your CMPSC 302 coursework. If you encounter any issues, feel free to reach out through the course’s Discord channel or attend the ACM SOS Week sessions for assistance."
  },
  {
    "objectID": "posts/classes/302.html#introduction",
    "href": "posts/classes/302.html#introduction",
    "title": "CMPSC 302 - Web Design Setup Guide",
    "section": "",
    "text": "Welcome to the Allegheny College CIS Course Tech Stack Guide for CMPSC 302 - Web Design. This document was created by the Allegheny College ACM Student Chapter as part of our “SOS (Set-up Our Students) Week” initiative. It is designed to help students enrolled in CMPSC 302 get set up with the necessary tools and software for their class.\nOur goal is to make the setup process simple and stress-free, so you can focus on learning and excelling in your coursework. Whether you’re a beginner or an experienced programmer, this guide is here to provide step-by-step instructions, useful tips, and links to resources for all the tools you’ll need."
  },
  {
    "objectID": "posts/classes/302.html#cmpsc-302-required-software",
    "href": "posts/classes/302.html#cmpsc-302-required-software",
    "title": "CMPSC 302 - Web Design Setup Guide",
    "section": "",
    "text": "Windows:\n\nDownload Git from git-scm.com and run the installer.\nDuring installation, select “Use Git from the Windows Command Prompt”.\nVerify the installation:\n\nOpen Command Prompt and type:\ngit --version\n\n\nLinux (Ubuntu):\n\nInstall Git using Terminal:\nsudo apt update && sudo apt install git\nVerify the installation:\ngit --version\n\nmacOS:\n\nInstall Git using Homebrew:\nbrew install git\nVerify the installation:\ngit --version\n\n\n\n\n\nGo to github.com.\nClick “Sign Up” and follow the instructions to create an account.\nConfirm your email address when prompted.\n\n\n\n\n\nOpen your terminal (or Command Prompt).\nSet your Git username and email address:\ngit config --global user.name \"Your Name\"\ngit config --global user.email \"your.email@example.com\"\nNote: Use the email address associated with your GitHub account.\n\n\n\n\n\nGenerate a new SSH key:\nssh-keygen -t ed25519 -C \"your.email@example.com\"\nWhen prompted, press Enter to save the key in the default location, and optionally add a passphrase.\nStart the SSH agent:\neval \"$(ssh-agent -s)\"\nAdd your SSH key to the agent:\nssh-add ~/.ssh/id_ed25519\nCopy your public key to your clipboard:\ncat ~/.ssh/id_ed25519.pub\nAdd the key to your GitHub account:\n\nGo to GitHub SSH Settings.\nClick “New SSH Key”, paste your key, and save.\n\n\n\n\n\nTest your SSH connection to GitHub:\nssh -T git@github.com\nIf successful, you’ll see a message confirming the connection.\n\n\n\n\n\n\n\n\n\nDownload Python 3.12.5 from the official Python website.\nRun the installer. During installation:\n\nCheck the box that says “Add Python to PATH” before clicking “Install Now”.\nEnsure “Install launcher for all users” is selected.\n\nVerify the installation:\n\nOpen Command Prompt and type:\npython --version\nor\npython3 --version\nEnsure it outputs Python 3.12.5.\n\n\n\n\n\nTo install Python 3.12.5 from source:\n\nUpdate your system packages by running:\nsudo apt update && sudo apt upgrade\nInstall the necessary dependencies with:\nsudo apt install -y build-essential libssl-dev zlib1g-dev \\\nlibncurses5-dev libnss3-dev libsqlite3-dev libreadline-dev \\\nlibffi-dev curl libbz2-dev\nDownload the source code for Python 3.12.5 from the official website:\ncurl -O https://www.python.org/ftp/python/3.12.5/Python-3.12.5.tgz\nExtract the downloaded tarball and navigate into the directory:\ntar -xf Python-3.12.5.tgz\ncd Python-3.12.5\nBuild and install Python:\n./configure --enable-optimizations\nmake -j$(nproc)\nsudo make altinstall\nNote: Use altinstall to avoid overwriting the system’s default Python.\nVerify the installation by typing:\npython3.12 --version\nEnsure it outputs Python 3.12.5.\n\n\n\n\n\nDownload Python 3.12.5 from the official Python website.\nOpen the downloaded .pkg file and follow the on-screen installation instructions.\nVerify the installation:\n\nOpen Terminal and type:\npython3 --version\nEnsure it outputs Python 3.12.5.\n\n\nImportant Note:\nPython 3.12.5 will be the default version used by the ACM Student Chapter for events and workshops. However, please check your course syllabus to ensure you are using the version specified by your instructor, if different.\n\n\n\n\n\n\n\n\n\nDownload the installer from the official VSCode website.\nRun the installer and follow the prompts.\nInstall recommended extensions:\n\nOpen VSCode, go to the Extensions view (Ctrl+Shift+X), and search for the following:\n\n“Intellicode”\n“Intellicode API Usage Examples”\n“Python”\n“Jupyter”\n“Markdown All in One”\n“Rainbow CSV”\n“Ruff”\n\nClick “Install” for each.\n\n\n\n\n\n\nDownload the latest .deb package from the official VSCode website.\nInstall the .deb package using Terminal:\nsudo dpkg -i code_*.deb\nsudo apt-get install -f\nOpen VSCode and install recommended extensions:\n\nGo to the Extensions view (Ctrl+Shift+X), search for the following, and click “Install”:\n\n“Intellicode”\n“Intellicode API Usage Examples”\n“Python”\n“Jupyter”\n“Markdown All in One”\n“Rainbow CSV”\n“Ruff”\n\n\n\n\n\n\n\nDownload the installer from the official VSCode website.\nOpen the downloaded file and drag the VSCode icon into the Applications folder.\nInstall recommended extensions:\n\nOpen VSCode, go to the Extensions view (Cmd+Shift+X), and search for the following:\n\n“Intellicode”\n“Intellicode API Usage Examples”\n“Python”\n“Jupyter”\n“Markdown All in One”\n“Rainbow CSV”\n“Ruff”\n\nClick “Install” for each.\n\n\n\nBy completing these setup steps, you’ll be well-prepared for your CMPSC 302 coursework. If you encounter any issues, feel free to reach out through the course’s Discord channel or attend the ACM SOS Week sessions for assistance."
  },
  {
    "objectID": "posts/classes/405.html",
    "href": "posts/classes/405.html",
    "title": "CMPSC 405 - Deep Learning Setup Guide",
    "section": "",
    "text": "Spring Semester, 2024-2025 Academic Year\n\n\nWelcome to the Allegheny College CIS Course Tech Stack Guide for CMPSC 405 - Deep Learning. This document was created by the Allegheny College ACM Student Chapter as part of our “SOS (Set-up Our Students) Week” initiative. It is designed to help students enrolled in CMPSC 405 get set up with the necessary tools and software for their class.\nOur goal is to make the setup process simple and stress-free, so you can focus on learning and excelling in your coursework. Whether you’re a beginner or an experienced programmer, this guide is here to provide step-by-step instructions, useful tips, and links to resources for all the tools you’ll need.\n\n\n\n\n\n\n\n\nWindows:\n\nDownload Git from git-scm.com and run the installer.\nDuring installation, select “Use Git from the Windows Command Prompt”.\nVerify the installation:\n\nOpen Command Prompt and type:\ngit --version\n\n\nLinux (Ubuntu):\n\nInstall Git using Terminal:\nsudo apt update && sudo apt install git\nVerify the installation:\ngit --version\n\nmacOS:\n\nInstall Git using Homebrew:\nbrew install git\nVerify the installation:\ngit --version\n\n\n\n\n\nGo to github.com.\nClick “Sign Up” and follow the instructions to create an account.\nConfirm your email address when prompted.\n\n\n\n\n\nOpen your terminal (or Command Prompt).\nSet your Git username and email address:\ngit config --global user.name \"Your Name\"\ngit config --global user.email \"your.email@example.com\"\nNote: Use the email address associated with your GitHub account.\n\n\n\n\n\nGenerate a new SSH key:\nssh-keygen -t ed25519 -C \"your.email@example.com\"\nWhen prompted, press Enter to save the key in the default location, and optionally add a passphrase.\nStart the SSH agent:\neval \"$(ssh-agent -s)\"\nAdd your SSH key to the agent:\nssh-add ~/.ssh/id_ed25519\nCopy your public key to your clipboard:\ncat ~/.ssh/id_ed25519.pub\nAdd the key to your GitHub account:\n\nGo to GitHub SSH Settings.\nClick “New SSH Key”, paste your key, and save.\n\n\n\n\n\nTest your SSH connection to GitHub:\nssh -T git@github.com\nIf successful, you’ll see a message confirming the connection.\n\n\n\n\n\n\n\n\n\nDownload Python 3.12.5 from the official Python website.\nRun the installer. During installation:\n\nCheck the box that says “Add Python to PATH” before clicking “Install Now”.\nEnsure “Install launcher for all users” is selected.\n\nVerify the installation:\n\nOpen Command Prompt and type:\npython --version\nor\npython3 --version\nEnsure it outputs Python 3.12.5.\n\n\n\n\n\nTo install Python 3.12.5 from source:\n\nUpdate your system packages by running:\nsudo apt update && sudo apt upgrade\nInstall the necessary dependencies with:\nsudo apt install -y build-essential libssl-dev zlib1g-dev \\\nlibncurses5-dev libnss3-dev libsqlite3-dev libreadline-dev \\\nlibffi-dev curl libbz2-dev\nDownload the source code for Python 3.12.5 from the official website:\ncurl -O https://www.python.org/ftp/python/3.12.5/Python-3.12.5.tgz\nExtract the downloaded tarball and navigate into the directory:\ntar -xf Python-3.12.5.tgz\ncd Python-3.12.5\nBuild and install Python:\n./configure --enable-optimizations\nmake -j$(nproc)\nsudo make altinstall\nNote: Use altinstall to avoid overwriting the system’s default Python.\nVerify the installation by typing:\npython3.12 --version\nEnsure it outputs Python 3.12.5.\n\n\n\n\n\nDownload Python 3.12.5 from the official Python website.\nOpen the downloaded .pkg file and follow the on-screen installation instructions.\nVerify the installation:\n\nOpen Terminal and type:\npython3 --version\nEnsure it outputs Python 3.12.5.\n\n\nImportant Note:\nPython 3.12.5 will be the default version used by the ACM Student Chapter for events and workshops. However, please check your course syllabus to ensure you are using the version specified by your instructor, if different.\n\n\n\n\n\n\n\n\n\nDownload the installer from the official VSCode website.\nRun the installer and follow the prompts.\nInstall recommended extensions:\n\nOpen VSCode, go to the Extensions view (Ctrl+Shift+X), and search for the following:\n\n“Intellicode”\n“Intellicode API Usage Examples”\n“Python”\n“Jupyter”\n“Markdown All in One”\n“Rainbow CSV”\n“Ruff”\n\nClick “Install” for each.\n\n\n\n\n\n\nDownload the latest .deb package from the official VSCode website.\nInstall the .deb package using Terminal:\nsudo dpkg -i code_*.deb\nsudo apt-get install -f\nOpen VSCode and install recommended extensions:\n\nGo to the Extensions view (Ctrl+Shift+X), search for the following, and click “Install”:\n\n“Intellicode”\n“Intellicode API Usage Examples”\n“Python”\n“Jupyter”\n“Markdown All in One”\n“Rainbow CSV”\n“Ruff”\n\n\n\n\n\n\n\nDownload the installer from the official VSCode website.\nOpen the downloaded file and drag the VSCode icon into the Applications folder.\nInstall recommended extensions:\n\nOpen VSCode, go to the Extensions view (Cmd+Shift+X), and search for the following:\n\n“Intellicode”\n“Intellicode API Usage Examples”\n“Python”\n“Jupyter”\n“Markdown All in One”\n“Rainbow CSV”\n“Ruff”\n\nClick “Install” for each.\n\n\n\nBy completing these setup steps, you’ll be well-prepared for your CMPSC 405 coursework. If you encounter any issues, feel free to reach out through the course’s Discord channel or attend the ACM SOS Week sessions for assistance."
  },
  {
    "objectID": "posts/classes/405.html#introduction",
    "href": "posts/classes/405.html#introduction",
    "title": "CMPSC 405 - Deep Learning Setup Guide",
    "section": "",
    "text": "Welcome to the Allegheny College CIS Course Tech Stack Guide for CMPSC 405 - Deep Learning. This document was created by the Allegheny College ACM Student Chapter as part of our “SOS (Set-up Our Students) Week” initiative. It is designed to help students enrolled in CMPSC 405 get set up with the necessary tools and software for their class.\nOur goal is to make the setup process simple and stress-free, so you can focus on learning and excelling in your coursework. Whether you’re a beginner or an experienced programmer, this guide is here to provide step-by-step instructions, useful tips, and links to resources for all the tools you’ll need."
  },
  {
    "objectID": "posts/classes/405.html#cmpsc-405-required-software",
    "href": "posts/classes/405.html#cmpsc-405-required-software",
    "title": "CMPSC 405 - Deep Learning Setup Guide",
    "section": "",
    "text": "Windows:\n\nDownload Git from git-scm.com and run the installer.\nDuring installation, select “Use Git from the Windows Command Prompt”.\nVerify the installation:\n\nOpen Command Prompt and type:\ngit --version\n\n\nLinux (Ubuntu):\n\nInstall Git using Terminal:\nsudo apt update && sudo apt install git\nVerify the installation:\ngit --version\n\nmacOS:\n\nInstall Git using Homebrew:\nbrew install git\nVerify the installation:\ngit --version\n\n\n\n\n\nGo to github.com.\nClick “Sign Up” and follow the instructions to create an account.\nConfirm your email address when prompted.\n\n\n\n\n\nOpen your terminal (or Command Prompt).\nSet your Git username and email address:\ngit config --global user.name \"Your Name\"\ngit config --global user.email \"your.email@example.com\"\nNote: Use the email address associated with your GitHub account.\n\n\n\n\n\nGenerate a new SSH key:\nssh-keygen -t ed25519 -C \"your.email@example.com\"\nWhen prompted, press Enter to save the key in the default location, and optionally add a passphrase.\nStart the SSH agent:\neval \"$(ssh-agent -s)\"\nAdd your SSH key to the agent:\nssh-add ~/.ssh/id_ed25519\nCopy your public key to your clipboard:\ncat ~/.ssh/id_ed25519.pub\nAdd the key to your GitHub account:\n\nGo to GitHub SSH Settings.\nClick “New SSH Key”, paste your key, and save.\n\n\n\n\n\nTest your SSH connection to GitHub:\nssh -T git@github.com\nIf successful, you’ll see a message confirming the connection.\n\n\n\n\n\n\n\n\n\nDownload Python 3.12.5 from the official Python website.\nRun the installer. During installation:\n\nCheck the box that says “Add Python to PATH” before clicking “Install Now”.\nEnsure “Install launcher for all users” is selected.\n\nVerify the installation:\n\nOpen Command Prompt and type:\npython --version\nor\npython3 --version\nEnsure it outputs Python 3.12.5.\n\n\n\n\n\nTo install Python 3.12.5 from source:\n\nUpdate your system packages by running:\nsudo apt update && sudo apt upgrade\nInstall the necessary dependencies with:\nsudo apt install -y build-essential libssl-dev zlib1g-dev \\\nlibncurses5-dev libnss3-dev libsqlite3-dev libreadline-dev \\\nlibffi-dev curl libbz2-dev\nDownload the source code for Python 3.12.5 from the official website:\ncurl -O https://www.python.org/ftp/python/3.12.5/Python-3.12.5.tgz\nExtract the downloaded tarball and navigate into the directory:\ntar -xf Python-3.12.5.tgz\ncd Python-3.12.5\nBuild and install Python:\n./configure --enable-optimizations\nmake -j$(nproc)\nsudo make altinstall\nNote: Use altinstall to avoid overwriting the system’s default Python.\nVerify the installation by typing:\npython3.12 --version\nEnsure it outputs Python 3.12.5.\n\n\n\n\n\nDownload Python 3.12.5 from the official Python website.\nOpen the downloaded .pkg file and follow the on-screen installation instructions.\nVerify the installation:\n\nOpen Terminal and type:\npython3 --version\nEnsure it outputs Python 3.12.5.\n\n\nImportant Note:\nPython 3.12.5 will be the default version used by the ACM Student Chapter for events and workshops. However, please check your course syllabus to ensure you are using the version specified by your instructor, if different.\n\n\n\n\n\n\n\n\n\nDownload the installer from the official VSCode website.\nRun the installer and follow the prompts.\nInstall recommended extensions:\n\nOpen VSCode, go to the Extensions view (Ctrl+Shift+X), and search for the following:\n\n“Intellicode”\n“Intellicode API Usage Examples”\n“Python”\n“Jupyter”\n“Markdown All in One”\n“Rainbow CSV”\n“Ruff”\n\nClick “Install” for each.\n\n\n\n\n\n\nDownload the latest .deb package from the official VSCode website.\nInstall the .deb package using Terminal:\nsudo dpkg -i code_*.deb\nsudo apt-get install -f\nOpen VSCode and install recommended extensions:\n\nGo to the Extensions view (Ctrl+Shift+X), search for the following, and click “Install”:\n\n“Intellicode”\n“Intellicode API Usage Examples”\n“Python”\n“Jupyter”\n“Markdown All in One”\n“Rainbow CSV”\n“Ruff”\n\n\n\n\n\n\n\nDownload the installer from the official VSCode website.\nOpen the downloaded file and drag the VSCode icon into the Applications folder.\nInstall recommended extensions:\n\nOpen VSCode, go to the Extensions view (Cmd+Shift+X), and search for the following:\n\n“Intellicode”\n“Intellicode API Usage Examples”\n“Python”\n“Jupyter”\n“Markdown All in One”\n“Rainbow CSV”\n“Ruff”\n\nClick “Install” for each.\n\n\n\nBy completing these setup steps, you’ll be well-prepared for your CMPSC 405 coursework. If you encounter any issues, feel free to reach out through the course’s Discord channel or attend the ACM SOS Week sessions for assistance."
  },
  {
    "objectID": "posts/classes/100.html",
    "href": "posts/classes/100.html",
    "title": "CMPSC 100 - Computational Expression Setup Guide",
    "section": "",
    "text": "Spring Semester, 2024-2025 Academic Year\n\n\nWelcome to the Allegheny College CIS Course Tech Stack Guide for CMPSC-100 Computational Expression. This document was created by the Allegheny College ACM Student Chapter as part of our “SOS (Set-up Our Students) Week” initiative. It is designed to help students enrolled in CMPSC 100 get set up with the necessary tools and software for their class.\nOur goal is to make the setup process simple and stress-free, so you can focus on learning and excelling in your coursework. Whether you’re a beginner or an experienced programmer, this guide is here to provide step-by-step instructions, useful tips, and links to resources for all the tools you’ll need.\n\n\n\n\n\n\n\n\nWindows:\n\nDownload Git from git-scm.com and run the installer.\nDuring installation, select “Use Git from the Windows Command Prompt”.\nVerify the installation:\n\nOpen Command Prompt and type:\ngit --version\n\n\nLinux (Ubuntu):\n\nInstall Git using Terminal:\nsudo apt update && sudo apt install git\nVerify the installation:\ngit --version\n\nmacOS:\n\nInstall Git using Homebrew:\nbrew install git\nVerify the installation:\ngit --version\n\n\n\n\n\nGo to github.com.\nClick “Sign Up” and follow the instructions to create an account.\nConfirm your email address when prompted.\n\n\n\n\n\nOpen your terminal (or Command Prompt).\nSet your Git username and email address:\ngit config --global user.name \"Your Name\"\ngit config --global user.email \"your.email@example.com\"\nNote: Use the email address associated with your GitHub account.\n\n\n\n\n\nGenerate a new SSH key:\nssh-keygen -t ed25519 -C \"your.email@example.com\"\nWhen prompted, press Enter to save the key in the default location, and optionally add a passphrase.\nStart the SSH agent:\neval \"$(ssh-agent -s)\"\nAdd your SSH key to the agent:\nssh-add ~/.ssh/id_ed25519\nCopy your public key to your clipboard:\ncat ~/.ssh/id_ed25519.pub\nAdd the key to your GitHub account:\n\nGo to GitHub SSH Settings.\nClick “New SSH Key”, paste your key, and save.\n\n\n\n\n\nTest your SSH connection to GitHub:\nssh -T git@github.com\nIf successful, you’ll see a message confirming the connection.\n\n\n\n\n\n\n\n\n\nDownload the installer from the official VSCode website.\nRun the installer and follow the prompts.\nInstall recommended extensions:\n\nOpen VSCode, go to the Extensions view (Ctrl+Shift+X), and search for the following:\n\n“Intellicode”\n“Intellicode API Usage Examples”\n“Python”\n“Jupyter”\n“Markdown All in One”\n“Rainbow CSV”\n“Ruff”\n\nClick “Install” for each.\n\n\n\n\n\n\nDownload the latest .deb package from the official VSCode website.\nInstall the .deb package using Terminal:\nsudo dpkg -i code_*.deb\nsudo apt-get install -f\nOpen VSCode and install recommended extensions:\n\nGo to the Extensions view (Ctrl+Shift+X), search for the following, and click “Install”:\n\n“Intellicode”\n“Intellicode API Usage Examples”\n“Python”\n“Jupyter”\n“Markdown All in One”\n“Rainbow CSV”\n“Ruff”\n\n\n\n\n\n\n\nDownload the installer from the official VSCode website.\nOpen the downloaded file and drag the VSCode icon into the Applications folder.\nInstall recommended extensions:\n\nOpen VSCode, go to the Extensions view (Cmd+Shift+X), and search for the following:\n\n“Intellicode”\n“Intellicode API Usage Examples”\n“Python”\n“Jupyter”\n“Markdown All in One”\n“Rainbow CSV”\n“Ruff”\n\nClick “Install” for each.\n\n\n\n\n\n\n\n\n\n\n\nEnsure Python 3.8 or later is installed.\nInstall Gatorgrade globally using pip:\npip install gatorgrade\nVerify the installation:\ngatorgrade --help\n\n\n\n\n\n\n\n\n\n\nEnsure Python 3.7 or later is installed.\nInstall VPython using pip:\npip install vpython\nVerify installation by running a simple VPython script:\nfrom vpython import sphere\nsphere()\nThis should open a window with a rendered 3D sphere.\n\n\n\n\n\n\n\n\n\n\nOpen your Google Drive and create a folder named Colab Notebooks.\nOpen Google Colab.\nSave your notebook to Google Drive by clicking File &gt; Save a copy in Drive.\nTo find the Colab directory in Google Drive:\n\nOpen Google Drive and look for the Colab Notebooks folder. Any notebooks saved in Colab will automatically appear here.\n\nUploading/downloading notebooks to/from GitHub without Git:\n\nUploading: Download the .ipynb file from GitHub and upload it directly to Google Colab.\nDownloading: Use File &gt; Download &gt; Download .ipynb in Colab to save your notebook and then manually upload it to GitHub.\n\n\n\n\n\n\n\n\n\n\n\nDownload Discord from the official website.\nOpen the installer and follow the prompts to install Discord.\nLog in or create an account.\n\n\n\n\n\nDownload the .deb package from the Discord website.\nInstall the .deb package:\nsudo dpkg -i discord-*.deb\nsudo apt-get install -f\nOpen Discord from your applications menu.\n\n\n\n\n\nDownload Discord from the official website.\nOpen the downloaded file and drag the Discord icon into the Applications folder.\nLog in or create an account.\n\n\nBy completing these setup steps, you’ll be well-prepared for your CMPSC 100 coursework. If you encounter any issues, feel free to reach out through the course’s Discord channel or attend the ACM SOS Week sessions for assistance."
  },
  {
    "objectID": "posts/classes/100.html#introduction",
    "href": "posts/classes/100.html#introduction",
    "title": "CMPSC 100 - Computational Expression Setup Guide",
    "section": "",
    "text": "Welcome to the Allegheny College CIS Course Tech Stack Guide for CMPSC-100 Computational Expression. This document was created by the Allegheny College ACM Student Chapter as part of our “SOS (Set-up Our Students) Week” initiative. It is designed to help students enrolled in CMPSC 100 get set up with the necessary tools and software for their class.\nOur goal is to make the setup process simple and stress-free, so you can focus on learning and excelling in your coursework. Whether you’re a beginner or an experienced programmer, this guide is here to provide step-by-step instructions, useful tips, and links to resources for all the tools you’ll need."
  },
  {
    "objectID": "posts/classes/100.html#cmpsc-100-required-software",
    "href": "posts/classes/100.html#cmpsc-100-required-software",
    "title": "CMPSC 100 - Computational Expression Setup Guide",
    "section": "",
    "text": "Windows:\n\nDownload Git from git-scm.com and run the installer.\nDuring installation, select “Use Git from the Windows Command Prompt”.\nVerify the installation:\n\nOpen Command Prompt and type:\ngit --version\n\n\nLinux (Ubuntu):\n\nInstall Git using Terminal:\nsudo apt update && sudo apt install git\nVerify the installation:\ngit --version\n\nmacOS:\n\nInstall Git using Homebrew:\nbrew install git\nVerify the installation:\ngit --version\n\n\n\n\n\nGo to github.com.\nClick “Sign Up” and follow the instructions to create an account.\nConfirm your email address when prompted.\n\n\n\n\n\nOpen your terminal (or Command Prompt).\nSet your Git username and email address:\ngit config --global user.name \"Your Name\"\ngit config --global user.email \"your.email@example.com\"\nNote: Use the email address associated with your GitHub account.\n\n\n\n\n\nGenerate a new SSH key:\nssh-keygen -t ed25519 -C \"your.email@example.com\"\nWhen prompted, press Enter to save the key in the default location, and optionally add a passphrase.\nStart the SSH agent:\neval \"$(ssh-agent -s)\"\nAdd your SSH key to the agent:\nssh-add ~/.ssh/id_ed25519\nCopy your public key to your clipboard:\ncat ~/.ssh/id_ed25519.pub\nAdd the key to your GitHub account:\n\nGo to GitHub SSH Settings.\nClick “New SSH Key”, paste your key, and save.\n\n\n\n\n\nTest your SSH connection to GitHub:\nssh -T git@github.com\nIf successful, you’ll see a message confirming the connection.\n\n\n\n\n\n\n\n\n\nDownload the installer from the official VSCode website.\nRun the installer and follow the prompts.\nInstall recommended extensions:\n\nOpen VSCode, go to the Extensions view (Ctrl+Shift+X), and search for the following:\n\n“Intellicode”\n“Intellicode API Usage Examples”\n“Python”\n“Jupyter”\n“Markdown All in One”\n“Rainbow CSV”\n“Ruff”\n\nClick “Install” for each.\n\n\n\n\n\n\nDownload the latest .deb package from the official VSCode website.\nInstall the .deb package using Terminal:\nsudo dpkg -i code_*.deb\nsudo apt-get install -f\nOpen VSCode and install recommended extensions:\n\nGo to the Extensions view (Ctrl+Shift+X), search for the following, and click “Install”:\n\n“Intellicode”\n“Intellicode API Usage Examples”\n“Python”\n“Jupyter”\n“Markdown All in One”\n“Rainbow CSV”\n“Ruff”\n\n\n\n\n\n\n\nDownload the installer from the official VSCode website.\nOpen the downloaded file and drag the VSCode icon into the Applications folder.\nInstall recommended extensions:\n\nOpen VSCode, go to the Extensions view (Cmd+Shift+X), and search for the following:\n\n“Intellicode”\n“Intellicode API Usage Examples”\n“Python”\n“Jupyter”\n“Markdown All in One”\n“Rainbow CSV”\n“Ruff”\n\nClick “Install” for each.\n\n\n\n\n\n\n\n\n\n\n\nEnsure Python 3.8 or later is installed.\nInstall Gatorgrade globally using pip:\npip install gatorgrade\nVerify the installation:\ngatorgrade --help\n\n\n\n\n\n\n\n\n\n\nEnsure Python 3.7 or later is installed.\nInstall VPython using pip:\npip install vpython\nVerify installation by running a simple VPython script:\nfrom vpython import sphere\nsphere()\nThis should open a window with a rendered 3D sphere.\n\n\n\n\n\n\n\n\n\n\nOpen your Google Drive and create a folder named Colab Notebooks.\nOpen Google Colab.\nSave your notebook to Google Drive by clicking File &gt; Save a copy in Drive.\nTo find the Colab directory in Google Drive:\n\nOpen Google Drive and look for the Colab Notebooks folder. Any notebooks saved in Colab will automatically appear here.\n\nUploading/downloading notebooks to/from GitHub without Git:\n\nUploading: Download the .ipynb file from GitHub and upload it directly to Google Colab.\nDownloading: Use File &gt; Download &gt; Download .ipynb in Colab to save your notebook and then manually upload it to GitHub.\n\n\n\n\n\n\n\n\n\n\n\nDownload Discord from the official website.\nOpen the installer and follow the prompts to install Discord.\nLog in or create an account.\n\n\n\n\n\nDownload the .deb package from the Discord website.\nInstall the .deb package:\nsudo dpkg -i discord-*.deb\nsudo apt-get install -f\nOpen Discord from your applications menu.\n\n\n\n\n\nDownload Discord from the official website.\nOpen the downloaded file and drag the Discord icon into the Applications folder.\nLog in or create an account.\n\n\nBy completing these setup steps, you’ll be well-prepared for your CMPSC 100 coursework. If you encounter any issues, feel free to reach out through the course’s Discord channel or attend the ACM SOS Week sessions for assistance."
  },
  {
    "objectID": "posts/classes/102.html",
    "href": "posts/classes/102.html",
    "title": "CMPSC 102 - Discrete Structures Setup Guide",
    "section": "",
    "text": "Spring Semester, 2024-2025 Academic Year\n\n\nWelcome to the Allegheny College CIS Course Tech Stack Guide for CMPSC 102 - Discrete Structures. This document was created by the Allegheny College ACM Student Chapter as part of our “SOS (Set-up Our Students) Week” initiative. It is designed to help students enrolled in CMPSC 102 get set up with the necessary tools and software for their class.\nOur goal is to make the setup process simple and stress-free, so you can focus on learning and excelling in your coursework. Whether you’re a beginner or an experienced programmer, this guide is here to provide step-by-step instructions, useful tips, and links to resources for all the tools you’ll need.\n\n\n\n\n\n\n\n\nWindows:\n\nDownload Git from git-scm.com and run the installer.\nDuring installation, select “Use Git from the Windows Command Prompt”.\nVerify the installation:\n\nOpen Command Prompt and type:\ngit --version\n\n\nLinux (Ubuntu):\n\nInstall Git using Terminal:\nsudo apt update && sudo apt install git\nVerify the installation:\ngit --version\n\nmacOS:\n\nInstall Git using Homebrew:\nbrew install git\nVerify the installation:\ngit --version\n\n\n\n\n\nGo to github.com.\nClick “Sign Up” and follow the instructions to create an account.\nConfirm your email address when prompted.\n\n\n\n\n\nOpen your terminal (or Command Prompt).\nSet your Git username and email address:\ngit config --global user.name \"Your Name\"\ngit config --global user.email \"your.email@example.com\"\nNote: Use the email address associated with your GitHub account.\n\n\n\n\n\nGenerate a new SSH key:\nssh-keygen -t ed25519 -C \"your.email@example.com\"\nWhen prompted, press Enter to save the key in the default location, and optionally add a passphrase.\nStart the SSH agent:\neval \"$(ssh-agent -s)\"\nAdd your SSH key to the agent:\nssh-add ~/.ssh/id_ed25519\nCopy your public key to your clipboard:\ncat ~/.ssh/id_ed25519.pub\nAdd the key to your GitHub account:\n\nGo to GitHub SSH Settings.\nClick “New SSH Key”, paste your key, and save.\n\n\n\n\n\nTest your SSH connection to GitHub:\nssh -T git@github.com\nIf successful, you’ll see a message confirming the connection.\n\n\n\n\n\n\n\n\n\nDownload Python 3.12.5 from the official Python website.\nRun the installer. During installation:\n\nCheck the box that says “Add Python to PATH” before clicking “Install Now”.\nEnsure “Install launcher for all users” is selected.\n\nVerify the installation:\n\nOpen Command Prompt and type:\npython --version\nor\npython3 --version\nEnsure it outputs Python 3.12.5.\n\n\n\n\n\nTo install Python 3.12.5 from source:\n\nUpdate your system packages by running:\nsudo apt update && sudo apt upgrade\nInstall the necessary dependencies with:\nsudo apt install -y build-essential libssl-dev zlib1g-dev \\\nlibncurses5-dev libnss3-dev libsqlite3-dev libreadline-dev \\\nlibffi-dev curl libbz2-dev\nDownload the source code for Python 3.12.5 from the official website:\ncurl -O https://www.python.org/ftp/python/3.12.5/Python-3.12.5.tgz\nExtract the downloaded tarball and navigate into the directory:\ntar -xf Python-3.12.5.tgz\ncd Python-3.12.5\nBuild and install Python:\n./configure --enable-optimizations\nmake -j$(nproc)\nsudo make altinstall\nNote: Use altinstall to avoid overwriting the system’s default Python.\nVerify the installation by typing:\npython3.12 --version\nEnsure it outputs Python 3.12.5.\n\n\n\n\n\nDownload Python 3.12.5 from the official Python website.\nOpen the downloaded .pkg file and follow the on-screen installation instructions.\nVerify the installation:\n\nOpen Terminal and type:\npython3 --version\nEnsure it outputs Python 3.12.5.\n\n\nImportant Note:\nPython 3.12.5 will be the default version used by the ACM Student Chapter for events and workshops. However, please check your course syllabus to ensure you are using the version specified by your instructor, if different.\n\n\n\n\n\n\n\n\n\nDownload the installer from the official VSCode website.\nRun the installer and follow the prompts.\nInstall recommended extensions:\n\nOpen VSCode, go to the Extensions view (Ctrl+Shift+X), and search for the following:\n\n“Intellicode”\n“Intellicode API Usage Examples”\n“Python”\n“Jupyter”\n“Markdown All in One”\n“Rainbow CSV”\n“Ruff”\n\nClick “Install” for each.\n\n\n\n\n\n\nDownload the latest .deb package from the official VSCode website.\nInstall the .deb package using Terminal:\nsudo dpkg -i code_*.deb\nsudo apt-get install -f\nOpen VSCode and install recommended extensions:\n\nGo to the Extensions view (Ctrl+Shift+X), search for the following, and click “Install”:\n\n“Intellicode”\n“Intellicode API Usage Examples”\n“Python”\n“Jupyter”\n“Markdown All in One”\n“Rainbow CSV”\n“Ruff”\n\n\n\n\n\n\n\nDownload the installer from the official VSCode website.\nOpen the downloaded file and drag the VSCode icon into the Applications folder.\nInstall recommended extensions:\n\nOpen VSCode, go to the Extensions view (Cmd+Shift+X), and search for the following:\n\n“Intellicode”\n“Intellicode API Usage Examples”\n“Python”\n“Jupyter”\n“Markdown All in One”\n“Rainbow CSV”\n“Ruff”\n\nClick “Install” for each.\n\n\n\n\n\n\n\n\n\n\n\nOpen Command Prompt or PowerShell.\nInstall Poetry using the official installer:\ncurl -sSL https://install.python-poetry.org | python3 -\nAdd Poetry to your PATH by editing your environment variables or following the on-screen instructions after installation.\nVerify the installation:\npoetry --version\n\n\n\n\n\nOpen a terminal.\nInstall Poetry:\ncurl -sSL https://install.python-poetry.org | python3 -\nAdd Poetry to your PATH:\nexport PATH=\"$HOME/.local/bin:$PATH\"\nVerify the installation:\npoetry --version\n\n\n\n\n\nOpen Terminal.\nInstall Poetry:\ncurl -sSL https://install.python-poetry.org | python3 -\nAdd Poetry to your PATH if necessary.\nVerify the installation:\npoetry --version\n\n\n\n\n\n\n\n\n\n\nEnsure Python 3.8 or later is installed.\nInstall Gatorgrade globally using pip:\npip install gatorgrade\nVerify the installation:\ngatorgrade --help\n\n\nBy completing these setup steps, you’ll be well-prepared for your CMPSC 102 coursework. If you encounter any issues, feel free to reach out through the course’s Discord channel or attend the ACM SOS Week sessions for assistance."
  },
  {
    "objectID": "posts/classes/102.html#introduction",
    "href": "posts/classes/102.html#introduction",
    "title": "CMPSC 102 - Discrete Structures Setup Guide",
    "section": "",
    "text": "Welcome to the Allegheny College CIS Course Tech Stack Guide for CMPSC 102 - Discrete Structures. This document was created by the Allegheny College ACM Student Chapter as part of our “SOS (Set-up Our Students) Week” initiative. It is designed to help students enrolled in CMPSC 102 get set up with the necessary tools and software for their class.\nOur goal is to make the setup process simple and stress-free, so you can focus on learning and excelling in your coursework. Whether you’re a beginner or an experienced programmer, this guide is here to provide step-by-step instructions, useful tips, and links to resources for all the tools you’ll need."
  },
  {
    "objectID": "posts/classes/102.html#cmpsc-102-required-software",
    "href": "posts/classes/102.html#cmpsc-102-required-software",
    "title": "CMPSC 102 - Discrete Structures Setup Guide",
    "section": "",
    "text": "Windows:\n\nDownload Git from git-scm.com and run the installer.\nDuring installation, select “Use Git from the Windows Command Prompt”.\nVerify the installation:\n\nOpen Command Prompt and type:\ngit --version\n\n\nLinux (Ubuntu):\n\nInstall Git using Terminal:\nsudo apt update && sudo apt install git\nVerify the installation:\ngit --version\n\nmacOS:\n\nInstall Git using Homebrew:\nbrew install git\nVerify the installation:\ngit --version\n\n\n\n\n\nGo to github.com.\nClick “Sign Up” and follow the instructions to create an account.\nConfirm your email address when prompted.\n\n\n\n\n\nOpen your terminal (or Command Prompt).\nSet your Git username and email address:\ngit config --global user.name \"Your Name\"\ngit config --global user.email \"your.email@example.com\"\nNote: Use the email address associated with your GitHub account.\n\n\n\n\n\nGenerate a new SSH key:\nssh-keygen -t ed25519 -C \"your.email@example.com\"\nWhen prompted, press Enter to save the key in the default location, and optionally add a passphrase.\nStart the SSH agent:\neval \"$(ssh-agent -s)\"\nAdd your SSH key to the agent:\nssh-add ~/.ssh/id_ed25519\nCopy your public key to your clipboard:\ncat ~/.ssh/id_ed25519.pub\nAdd the key to your GitHub account:\n\nGo to GitHub SSH Settings.\nClick “New SSH Key”, paste your key, and save.\n\n\n\n\n\nTest your SSH connection to GitHub:\nssh -T git@github.com\nIf successful, you’ll see a message confirming the connection.\n\n\n\n\n\n\n\n\n\nDownload Python 3.12.5 from the official Python website.\nRun the installer. During installation:\n\nCheck the box that says “Add Python to PATH” before clicking “Install Now”.\nEnsure “Install launcher for all users” is selected.\n\nVerify the installation:\n\nOpen Command Prompt and type:\npython --version\nor\npython3 --version\nEnsure it outputs Python 3.12.5.\n\n\n\n\n\nTo install Python 3.12.5 from source:\n\nUpdate your system packages by running:\nsudo apt update && sudo apt upgrade\nInstall the necessary dependencies with:\nsudo apt install -y build-essential libssl-dev zlib1g-dev \\\nlibncurses5-dev libnss3-dev libsqlite3-dev libreadline-dev \\\nlibffi-dev curl libbz2-dev\nDownload the source code for Python 3.12.5 from the official website:\ncurl -O https://www.python.org/ftp/python/3.12.5/Python-3.12.5.tgz\nExtract the downloaded tarball and navigate into the directory:\ntar -xf Python-3.12.5.tgz\ncd Python-3.12.5\nBuild and install Python:\n./configure --enable-optimizations\nmake -j$(nproc)\nsudo make altinstall\nNote: Use altinstall to avoid overwriting the system’s default Python.\nVerify the installation by typing:\npython3.12 --version\nEnsure it outputs Python 3.12.5.\n\n\n\n\n\nDownload Python 3.12.5 from the official Python website.\nOpen the downloaded .pkg file and follow the on-screen installation instructions.\nVerify the installation:\n\nOpen Terminal and type:\npython3 --version\nEnsure it outputs Python 3.12.5.\n\n\nImportant Note:\nPython 3.12.5 will be the default version used by the ACM Student Chapter for events and workshops. However, please check your course syllabus to ensure you are using the version specified by your instructor, if different.\n\n\n\n\n\n\n\n\n\nDownload the installer from the official VSCode website.\nRun the installer and follow the prompts.\nInstall recommended extensions:\n\nOpen VSCode, go to the Extensions view (Ctrl+Shift+X), and search for the following:\n\n“Intellicode”\n“Intellicode API Usage Examples”\n“Python”\n“Jupyter”\n“Markdown All in One”\n“Rainbow CSV”\n“Ruff”\n\nClick “Install” for each.\n\n\n\n\n\n\nDownload the latest .deb package from the official VSCode website.\nInstall the .deb package using Terminal:\nsudo dpkg -i code_*.deb\nsudo apt-get install -f\nOpen VSCode and install recommended extensions:\n\nGo to the Extensions view (Ctrl+Shift+X), search for the following, and click “Install”:\n\n“Intellicode”\n“Intellicode API Usage Examples”\n“Python”\n“Jupyter”\n“Markdown All in One”\n“Rainbow CSV”\n“Ruff”\n\n\n\n\n\n\n\nDownload the installer from the official VSCode website.\nOpen the downloaded file and drag the VSCode icon into the Applications folder.\nInstall recommended extensions:\n\nOpen VSCode, go to the Extensions view (Cmd+Shift+X), and search for the following:\n\n“Intellicode”\n“Intellicode API Usage Examples”\n“Python”\n“Jupyter”\n“Markdown All in One”\n“Rainbow CSV”\n“Ruff”\n\nClick “Install” for each.\n\n\n\n\n\n\n\n\n\n\n\nOpen Command Prompt or PowerShell.\nInstall Poetry using the official installer:\ncurl -sSL https://install.python-poetry.org | python3 -\nAdd Poetry to your PATH by editing your environment variables or following the on-screen instructions after installation.\nVerify the installation:\npoetry --version\n\n\n\n\n\nOpen a terminal.\nInstall Poetry:\ncurl -sSL https://install.python-poetry.org | python3 -\nAdd Poetry to your PATH:\nexport PATH=\"$HOME/.local/bin:$PATH\"\nVerify the installation:\npoetry --version\n\n\n\n\n\nOpen Terminal.\nInstall Poetry:\ncurl -sSL https://install.python-poetry.org | python3 -\nAdd Poetry to your PATH if necessary.\nVerify the installation:\npoetry --version\n\n\n\n\n\n\n\n\n\n\nEnsure Python 3.8 or later is installed.\nInstall Gatorgrade globally using pip:\npip install gatorgrade\nVerify the installation:\ngatorgrade --help\n\n\nBy completing these setup steps, you’ll be well-prepared for your CMPSC 102 coursework. If you encounter any issues, feel free to reach out through the course’s Discord channel or attend the ACM SOS Week sessions for assistance."
  },
  {
    "objectID": "posts/classes/202.html",
    "href": "posts/classes/202.html",
    "title": "CMPSC 202 - Algorithm Analysis Setup Guide",
    "section": "",
    "text": "Spring Semester, 2024-2025 Academic Year\n\n\nWelcome to the Allegheny College CIS Course Tech Stack Guide for CMPSC 202 - Algorithm Analysis. This document was created by the Allegheny College ACM Student Chapter as part of our “SOS (Set-up Our Students) Week” initiative. It is designed to help students enrolled in CMPSC 202 get set up with the necessary tools and software for their class.\nOur goal is to make the setup process simple and stress-free, so you can focus on learning and excelling in your coursework. Whether you’re a beginner or an experienced programmer, this guide is here to provide step-by-step instructions, useful tips, and links to resources for all the tools you’ll need.\n\n\n\n\n\n\n\n\nWindows:\n\nDownload Git from git-scm.com and run the installer.\nDuring installation, select “Use Git from the Windows Command Prompt”.\nVerify the installation:\n\nOpen Command Prompt and type:\ngit --version\n\n\nLinux (Ubuntu):\n\nInstall Git using Terminal:\nsudo apt update && sudo apt install git\nVerify the installation:\ngit --version\n\nmacOS:\n\nInstall Git using Homebrew:\nbrew install git\nVerify the installation:\ngit --version\n\n\n\n\n\nGo to github.com.\nClick “Sign Up” and follow the instructions to create an account.\nConfirm your email address when prompted.\n\n\n\n\n\nOpen your terminal (or Command Prompt).\nSet your Git username and email address:\ngit config --global user.name \"Your Name\"\ngit config --global user.email \"your.email@example.com\"\nNote: Use the email address associated with your GitHub account.\n\n\n\n\n\nGenerate a new SSH key:\nssh-keygen -t ed25519 -C \"your.email@example.com\"\nWhen prompted, press Enter to save the key in the default location, and optionally add a passphrase.\nStart the SSH agent:\neval \"$(ssh-agent -s)\"\nAdd your SSH key to the agent:\nssh-add ~/.ssh/id_ed25519\nCopy your public key to your clipboard:\ncat ~/.ssh/id_ed25519.pub\nAdd the key to your GitHub account:\n\nGo to GitHub SSH Settings.\nClick “New SSH Key”, paste your key, and save.\n\n\n\n\n\nTest your SSH connection to GitHub:\nssh -T git@github.com\nIf successful, you’ll see a message confirming the connection.\n\n\n\n\n\n\n\n\n\nDownload Python 3.12.5 from the official Python website.\nRun the installer. During installation:\n\nCheck the box that says “Add Python to PATH” before clicking “Install Now”.\nEnsure “Install launcher for all users” is selected.\n\nVerify the installation:\n\nOpen Command Prompt and type:\npython --version\nor\npython3 --version\nEnsure it outputs Python 3.12.5.\n\n\n\n\n\nTo install Python 3.12.5 from source:\n\nUpdate your system packages by running:\nsudo apt update && sudo apt upgrade\nInstall the necessary dependencies with:\nsudo apt install -y build-essential libssl-dev zlib1g-dev \\\nlibncurses5-dev libnss3-dev libsqlite3-dev libreadline-dev \\\nlibffi-dev curl libbz2-dev\nDownload the source code for Python 3.12.5 from the official website:\ncurl -O https://www.python.org/ftp/python/3.12.5/Python-3.12.5.tgz\nExtract the downloaded tarball and navigate into the directory:\ntar -xf Python-3.12.5.tgz\ncd Python-3.12.5\nBuild and install Python:\n./configure --enable-optimizations\nmake -j$(nproc)\nsudo make altinstall\nNote: Use altinstall to avoid overwriting the system’s default Python.\nVerify the installation by typing:\npython3.12 --version\nEnsure it outputs Python 3.12.5.\n\n\n\n\n\nDownload Python 3.12.5 from the official Python website.\nOpen the downloaded .pkg file and follow the on-screen installation instructions.\nVerify the installation:\n\nOpen Terminal and type:\npython3 --version\nEnsure it outputs Python 3.12.5.\n\n\nImportant Note:\nPython 3.12.5 will be the default version used by the ACM Student Chapter for events and workshops. However, please check your course syllabus to ensure you are using the version specified by your instructor, if different.\n\n\n\n\n\n\n\n\n\nDownload the installer from the official VSCode website.\nRun the installer and follow the prompts.\nInstall recommended extensions:\n\nOpen VSCode, go to the Extensions view (Ctrl+Shift+X), and search for the following:\n\n“Intellicode”\n“Intellicode API Usage Examples”\n“Python”\n“Jupyter”\n“Markdown All in One”\n“Rainbow CSV”\n“Ruff”\n\nClick “Install” for each.\n\n\n\n\n\n\nDownload the latest .deb package from the official VSCode website.\nInstall the .deb package using Terminal:\nsudo dpkg -i code_*.deb\nsudo apt-get install -f\nOpen VSCode and install recommended extensions:\n\nGo to the Extensions view (Ctrl+Shift+X), search for the following, and click “Install”:\n\n“Intellicode”\n“Intellicode API Usage Examples”\n“Python”\n“Jupyter”\n“Markdown All in One”\n“Rainbow CSV”\n“Ruff”\n\n\n\n\n\n\n\nDownload the installer from the official VSCode website.\nOpen the downloaded file and drag the VSCode icon into the Applications folder.\nInstall recommended extensions:\n\nOpen VSCode, go to the Extensions view (Cmd+Shift+X), and search for the following:\n\n“Intellicode”\n“Intellicode API Usage Examples”\n“Python”\n“Jupyter”\n“Markdown All in One”\n“Rainbow CSV”\n“Ruff”\n\nClick “Install” for each.\n\n\n\n\n\n\n\n\n\n\n\nDownload Quarto from the official website.\nRun the installer and follow the prompts.\nVerify installation:\nquarto check\n\n\n\n\n\nDownload the .deb file from the Quarto website.\nInstall it using:\nsudo dpkg -i quarto-*.deb\nVerify installation:\nquarto check\n\n\n\n\n\nDownload the .pkg file from the Quarto website.\nOpen the file and follow the prompts to install.\nVerify installation:\nquarto check\n\n\n\n\n\n\n\n\n\n\nasdf is not supported natively on Windows. Use WSL and follow the Linux instructions.\n\n\n\n\n\nInstall dependencies:\nsudo apt install curl git\nClone the asdf repository:\ngit clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.15.0\nAdd asdf to your shell configuration file (e.g., .bashrc or .zshrc):\n. \"$HOME/.asdf/asdf.sh\"\nRestart your terminal and verify installation:\nasdf --version\n\n\n\n\n\nInstall Homebrew if not already installed.\nInstall asdf:\nbrew install asdf\nAdd asdf to your shell configuration file (e.g., .zshrc):\n. $(brew --prefix asdf)/libexec/asdf.sh\nRestart your terminal and verify installation:\nasdf --version\n\n\n\n\n\n\n\n\n\n\nNot natively supported. Use WSL and follow the Linux instructions.\n\n\n\n\n\nInstall the Nix package manager:\ncurl -L https://nixos.org/nix/install | sh\nInstall devenv using Nix:\nnix-env -if https://github.com/cachix/devenv/tarball/latest\nVerify installation:\ndevenv --version\n\n\n\n\n\nInstall the Nix package manager:\ncurl -L https://nixos.org/nix/install | sh\nInstall devenv using Nix:\nnix-env -if https://github.com/cachix/devenv/tarball/latest\nVerify installation:\ndevenv --version\n\n\n\n\n\n\n\n\n\n\nNot natively supported. Use WSL and follow the Linux instructions.\n\n\n\n\n\nInstall mise using the official script:\ncurl https://mise.run | sh\nAdd mise to your shell configuration:\necho 'eval \"$(mise activate bash)\"' &gt;&gt; ~/.bashrc\nRestart your terminal and verify installation:\nmise --version\n\n\n\n\n\nInstall mise using the official script:\ncurl https://mise.run | sh\nAdd mise to your shell configuration:\necho 'eval \"$(mise activate zsh)\"' &gt;&gt; ~/.zshrc\nRestart your terminal and verify installation:\nmise --version\n\n\n\n\n\n\n\n\n\n\nOpen Command Prompt or PowerShell.\nInstall Poetry using the official installer:\ncurl -sSL https://install.python-poetry.org | python3 -\nAdd Poetry to your PATH by editing your environment variables or following the on-screen instructions after installation.\nVerify the installation:\npoetry --version\n\n\n\n\n\nOpen a terminal.\nInstall Poetry:\ncurl -sSL https://install.python-poetry.org | python3 -\nAdd Poetry to your PATH:\nexport PATH=\"$HOME/.local/bin:$PATH\"\nVerify the installation:\npoetry --version\n\n\n\n\n\nOpen Terminal.\nInstall Poetry:\ncurl -sSL https://install.python-poetry.org | python3 -\nAdd Poetry to your PATH if necessary.\nVerify the installation:\npoetry --version\n\n\n\n\n\n\n\n\n\n\nEnsure Python 3.8 or later is installed.\nInstall Gatorgrade globally using pip:\npip install gatorgrade\nVerify the installation:\ngatorgrade --help\n\n\n\n\n\n\n\n\n\n\nEnsure Python 3.7 or later is installed.\nInstall execexam using pip:\npip install execexam\nVerify the installation:\nexecexam --help\n\n\nBy completing these setup steps, you’ll be well-prepared for your CMPSC 202 coursework. If you encounter any issues, feel free to reach out through the course’s Discord channel or attend the ACM SOS Week sessions for assistance."
  },
  {
    "objectID": "posts/classes/202.html#introduction",
    "href": "posts/classes/202.html#introduction",
    "title": "CMPSC 202 - Algorithm Analysis Setup Guide",
    "section": "",
    "text": "Welcome to the Allegheny College CIS Course Tech Stack Guide for CMPSC 202 - Algorithm Analysis. This document was created by the Allegheny College ACM Student Chapter as part of our “SOS (Set-up Our Students) Week” initiative. It is designed to help students enrolled in CMPSC 202 get set up with the necessary tools and software for their class.\nOur goal is to make the setup process simple and stress-free, so you can focus on learning and excelling in your coursework. Whether you’re a beginner or an experienced programmer, this guide is here to provide step-by-step instructions, useful tips, and links to resources for all the tools you’ll need."
  },
  {
    "objectID": "posts/classes/202.html#cmpsc-202-required-software",
    "href": "posts/classes/202.html#cmpsc-202-required-software",
    "title": "CMPSC 202 - Algorithm Analysis Setup Guide",
    "section": "",
    "text": "Windows:\n\nDownload Git from git-scm.com and run the installer.\nDuring installation, select “Use Git from the Windows Command Prompt”.\nVerify the installation:\n\nOpen Command Prompt and type:\ngit --version\n\n\nLinux (Ubuntu):\n\nInstall Git using Terminal:\nsudo apt update && sudo apt install git\nVerify the installation:\ngit --version\n\nmacOS:\n\nInstall Git using Homebrew:\nbrew install git\nVerify the installation:\ngit --version\n\n\n\n\n\nGo to github.com.\nClick “Sign Up” and follow the instructions to create an account.\nConfirm your email address when prompted.\n\n\n\n\n\nOpen your terminal (or Command Prompt).\nSet your Git username and email address:\ngit config --global user.name \"Your Name\"\ngit config --global user.email \"your.email@example.com\"\nNote: Use the email address associated with your GitHub account.\n\n\n\n\n\nGenerate a new SSH key:\nssh-keygen -t ed25519 -C \"your.email@example.com\"\nWhen prompted, press Enter to save the key in the default location, and optionally add a passphrase.\nStart the SSH agent:\neval \"$(ssh-agent -s)\"\nAdd your SSH key to the agent:\nssh-add ~/.ssh/id_ed25519\nCopy your public key to your clipboard:\ncat ~/.ssh/id_ed25519.pub\nAdd the key to your GitHub account:\n\nGo to GitHub SSH Settings.\nClick “New SSH Key”, paste your key, and save.\n\n\n\n\n\nTest your SSH connection to GitHub:\nssh -T git@github.com\nIf successful, you’ll see a message confirming the connection.\n\n\n\n\n\n\n\n\n\nDownload Python 3.12.5 from the official Python website.\nRun the installer. During installation:\n\nCheck the box that says “Add Python to PATH” before clicking “Install Now”.\nEnsure “Install launcher for all users” is selected.\n\nVerify the installation:\n\nOpen Command Prompt and type:\npython --version\nor\npython3 --version\nEnsure it outputs Python 3.12.5.\n\n\n\n\n\nTo install Python 3.12.5 from source:\n\nUpdate your system packages by running:\nsudo apt update && sudo apt upgrade\nInstall the necessary dependencies with:\nsudo apt install -y build-essential libssl-dev zlib1g-dev \\\nlibncurses5-dev libnss3-dev libsqlite3-dev libreadline-dev \\\nlibffi-dev curl libbz2-dev\nDownload the source code for Python 3.12.5 from the official website:\ncurl -O https://www.python.org/ftp/python/3.12.5/Python-3.12.5.tgz\nExtract the downloaded tarball and navigate into the directory:\ntar -xf Python-3.12.5.tgz\ncd Python-3.12.5\nBuild and install Python:\n./configure --enable-optimizations\nmake -j$(nproc)\nsudo make altinstall\nNote: Use altinstall to avoid overwriting the system’s default Python.\nVerify the installation by typing:\npython3.12 --version\nEnsure it outputs Python 3.12.5.\n\n\n\n\n\nDownload Python 3.12.5 from the official Python website.\nOpen the downloaded .pkg file and follow the on-screen installation instructions.\nVerify the installation:\n\nOpen Terminal and type:\npython3 --version\nEnsure it outputs Python 3.12.5.\n\n\nImportant Note:\nPython 3.12.5 will be the default version used by the ACM Student Chapter for events and workshops. However, please check your course syllabus to ensure you are using the version specified by your instructor, if different.\n\n\n\n\n\n\n\n\n\nDownload the installer from the official VSCode website.\nRun the installer and follow the prompts.\nInstall recommended extensions:\n\nOpen VSCode, go to the Extensions view (Ctrl+Shift+X), and search for the following:\n\n“Intellicode”\n“Intellicode API Usage Examples”\n“Python”\n“Jupyter”\n“Markdown All in One”\n“Rainbow CSV”\n“Ruff”\n\nClick “Install” for each.\n\n\n\n\n\n\nDownload the latest .deb package from the official VSCode website.\nInstall the .deb package using Terminal:\nsudo dpkg -i code_*.deb\nsudo apt-get install -f\nOpen VSCode and install recommended extensions:\n\nGo to the Extensions view (Ctrl+Shift+X), search for the following, and click “Install”:\n\n“Intellicode”\n“Intellicode API Usage Examples”\n“Python”\n“Jupyter”\n“Markdown All in One”\n“Rainbow CSV”\n“Ruff”\n\n\n\n\n\n\n\nDownload the installer from the official VSCode website.\nOpen the downloaded file and drag the VSCode icon into the Applications folder.\nInstall recommended extensions:\n\nOpen VSCode, go to the Extensions view (Cmd+Shift+X), and search for the following:\n\n“Intellicode”\n“Intellicode API Usage Examples”\n“Python”\n“Jupyter”\n“Markdown All in One”\n“Rainbow CSV”\n“Ruff”\n\nClick “Install” for each.\n\n\n\n\n\n\n\n\n\n\n\nDownload Quarto from the official website.\nRun the installer and follow the prompts.\nVerify installation:\nquarto check\n\n\n\n\n\nDownload the .deb file from the Quarto website.\nInstall it using:\nsudo dpkg -i quarto-*.deb\nVerify installation:\nquarto check\n\n\n\n\n\nDownload the .pkg file from the Quarto website.\nOpen the file and follow the prompts to install.\nVerify installation:\nquarto check\n\n\n\n\n\n\n\n\n\n\nasdf is not supported natively on Windows. Use WSL and follow the Linux instructions.\n\n\n\n\n\nInstall dependencies:\nsudo apt install curl git\nClone the asdf repository:\ngit clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.15.0\nAdd asdf to your shell configuration file (e.g., .bashrc or .zshrc):\n. \"$HOME/.asdf/asdf.sh\"\nRestart your terminal and verify installation:\nasdf --version\n\n\n\n\n\nInstall Homebrew if not already installed.\nInstall asdf:\nbrew install asdf\nAdd asdf to your shell configuration file (e.g., .zshrc):\n. $(brew --prefix asdf)/libexec/asdf.sh\nRestart your terminal and verify installation:\nasdf --version\n\n\n\n\n\n\n\n\n\n\nNot natively supported. Use WSL and follow the Linux instructions.\n\n\n\n\n\nInstall the Nix package manager:\ncurl -L https://nixos.org/nix/install | sh\nInstall devenv using Nix:\nnix-env -if https://github.com/cachix/devenv/tarball/latest\nVerify installation:\ndevenv --version\n\n\n\n\n\nInstall the Nix package manager:\ncurl -L https://nixos.org/nix/install | sh\nInstall devenv using Nix:\nnix-env -if https://github.com/cachix/devenv/tarball/latest\nVerify installation:\ndevenv --version\n\n\n\n\n\n\n\n\n\n\nNot natively supported. Use WSL and follow the Linux instructions.\n\n\n\n\n\nInstall mise using the official script:\ncurl https://mise.run | sh\nAdd mise to your shell configuration:\necho 'eval \"$(mise activate bash)\"' &gt;&gt; ~/.bashrc\nRestart your terminal and verify installation:\nmise --version\n\n\n\n\n\nInstall mise using the official script:\ncurl https://mise.run | sh\nAdd mise to your shell configuration:\necho 'eval \"$(mise activate zsh)\"' &gt;&gt; ~/.zshrc\nRestart your terminal and verify installation:\nmise --version\n\n\n\n\n\n\n\n\n\n\nOpen Command Prompt or PowerShell.\nInstall Poetry using the official installer:\ncurl -sSL https://install.python-poetry.org | python3 -\nAdd Poetry to your PATH by editing your environment variables or following the on-screen instructions after installation.\nVerify the installation:\npoetry --version\n\n\n\n\n\nOpen a terminal.\nInstall Poetry:\ncurl -sSL https://install.python-poetry.org | python3 -\nAdd Poetry to your PATH:\nexport PATH=\"$HOME/.local/bin:$PATH\"\nVerify the installation:\npoetry --version\n\n\n\n\n\nOpen Terminal.\nInstall Poetry:\ncurl -sSL https://install.python-poetry.org | python3 -\nAdd Poetry to your PATH if necessary.\nVerify the installation:\npoetry --version\n\n\n\n\n\n\n\n\n\n\nEnsure Python 3.8 or later is installed.\nInstall Gatorgrade globally using pip:\npip install gatorgrade\nVerify the installation:\ngatorgrade --help\n\n\n\n\n\n\n\n\n\n\nEnsure Python 3.7 or later is installed.\nInstall execexam using pip:\npip install execexam\nVerify the installation:\nexecexam --help\n\n\nBy completing these setup steps, you’ll be well-prepared for your CMPSC 202 coursework. If you encounter any issues, feel free to reach out through the course’s Discord channel or attend the ACM SOS Week sessions for assistance."
  },
  {
    "objectID": "posts/classes/105.html",
    "href": "posts/classes/105.html",
    "title": "CMPSC 105 - Data Exploration Setup Guide",
    "section": "",
    "text": "Spring Semester, 2024-2025 Academic Year\n\n\nWelcome to the Allegheny College CIS Course Tech Stack Guide for CMPSC 105 - Data Exploration. This document was created by the Allegheny College ACM Student Chapter as part of our “SOS (Set-up Our Students) Week” initiative. It is designed to help students enrolled in CMPSC 105 get set up with the necessary tools and software for their class.\nOur goal is to make the setup process simple and stress-free, so you can focus on learning and excelling in your coursework. Whether you’re a beginner or an experienced programmer, this guide is here to provide step-by-step instructions, useful tips, and links to resources for all the tools you’ll need.\n\n\n\n\n\n\n\n\nWindows:\n\nDownload Git from git-scm.com and run the installer.\nDuring installation, select “Use Git from the Windows Command Prompt”.\nVerify the installation:\n\nOpen Command Prompt and type:\ngit --version\n\n\nLinux (Ubuntu):\n\nInstall Git using Terminal:\nsudo apt update && sudo apt install git\nVerify the installation:\ngit --version\n\nmacOS:\n\nInstall Git using Homebrew:\nbrew install git\nVerify the installation:\ngit --version\n\n\n\n\n\nGo to github.com.\nClick “Sign Up” and follow the instructions to create an account.\nConfirm your email address when prompted.\n\n\n\n\n\nOpen your terminal (or Command Prompt).\nSet your Git username and email address:\ngit config --global user.name \"Your Name\"\ngit config --global user.email \"your.email@example.com\"\nNote: Use the email address associated with your GitHub account.\n\n\n\n\n\nGenerate a new SSH key:\nssh-keygen -t ed25519 -C \"your.email@example.com\"\nWhen prompted, press Enter to save the key in the default location, and optionally add a passphrase.\nStart the SSH agent:\neval \"$(ssh-agent -s)\"\nAdd your SSH key to the agent:\nssh-add ~/.ssh/id_ed25519\nCopy your public key to your clipboard:\ncat ~/.ssh/id_ed25519.pub\nAdd the key to your GitHub account:\n\nGo to GitHub SSH Settings.\nClick “New SSH Key”, paste your key, and save.\n\n\n\n\n\nTest your SSH connection to GitHub:\nssh -T git@github.com\nIf successful, you’ll see a message confirming the connection.\n\n\n\nIf you prefer not to use Git on your local machine, you can still upload and download files manually from GitHub.\n\n\n\nGo to your repository on GitHub.\nClick the “Add file” button and select “Upload files”.\nDrag and drop files or click “choose your files” to select them.\nAdd a commit message and click “Commit changes” to upload the files.\n\n\n\n\n\nNavigate to the repository on GitHub.\nClick the “Code” button and select “Download ZIP”.\nExtract the downloaded ZIP file to access the project files.\n\n\n\n\n\n\n\n\n\n\n\nDownload the installer from the official VSCode website.\nRun the installer and follow the prompts.\nInstall recommended extensions:\n\nOpen VSCode, go to the Extensions view (Ctrl+Shift+X), and search for the following:\n\n“Intellicode”\n“Intellicode API Usage Examples”\n“Python”\n“Jupyter”\n“Markdown All in One”\n“Rainbow CSV”\n“Ruff”\n\nClick “Install” for each.\n\n\n\n\n\n\nDownload the latest .deb package from the official VSCode website.\nInstall the .deb package using Terminal:\nsudo dpkg -i code_*.deb\nsudo apt-get install -f\nOpen VSCode and install recommended extensions:\n\nGo to the Extensions view (Ctrl+Shift+X), search for the following, and click “Install”:\n\n“Intellicode”\n“Intellicode API Usage Examples”\n“Python”\n“Jupyter”\n“Markdown All in One”\n“Rainbow CSV”\n“Ruff”\n\n\n\n\n\n\n\nDownload the installer from the official VSCode website.\nOpen the downloaded file and drag the VSCode icon into the Applications folder.\nInstall recommended extensions:\n\nOpen VSCode, go to the Extensions view (Cmd+Shift+X), and search for the following:\n\n“Intellicode”\n“Intellicode API Usage Examples”\n“Python”\n“Jupyter”\n“Markdown All in One”\n“Rainbow CSV”\n“Ruff”\n\nClick “Install” for each.\n\n\n\n\n\n\n\n\n\n\n\nOpen your Google Drive and create a folder named Colab Notebooks.\nOpen Google Colab.\nSave your notebook to Google Drive by clicking File &gt; Save a copy in Drive.\nTo find the Colab directory in Google Drive:\n\nOpen Google Drive and look for the Colab Notebooks folder. Any notebooks saved in Colab will automatically appear here.\n\nUploading/downloading notebooks to/from GitHub without Git:\n\nUploading: Download the .ipynb file from GitHub and upload it directly to Google Colab.\nDownloading: Use File &gt; Download &gt; Download .ipynb in Colab to save your notebook and then manually upload it to GitHub.\n\n\n\n\n\n\n\n\n\n\n\nDownload Discord from the official website.\nOpen the installer and follow the prompts to install Discord.\nLog in or create an account.\n\n\n\n\n\nDownload the .deb package from the Discord website.\nInstall the .deb package:\nsudo dpkg -i discord-*.deb\nsudo apt-get install -f\nOpen Discord from your applications menu.\n\n\n\n\n\nDownload Discord from the official website.\nOpen the downloaded file and drag the Discord icon into the Applications folder.\nLog in or create an account.\n\nBy completing these setup steps, you’ll be well-prepared for your CMPSC 105 coursework. If you encounter any issues, feel free to reach out through the course’s Discord channel or attend the ACM SOS Week sessions for assistance."
  },
  {
    "objectID": "posts/classes/105.html#introduction",
    "href": "posts/classes/105.html#introduction",
    "title": "CMPSC 105 - Data Exploration Setup Guide",
    "section": "",
    "text": "Welcome to the Allegheny College CIS Course Tech Stack Guide for CMPSC 105 - Data Exploration. This document was created by the Allegheny College ACM Student Chapter as part of our “SOS (Set-up Our Students) Week” initiative. It is designed to help students enrolled in CMPSC 105 get set up with the necessary tools and software for their class.\nOur goal is to make the setup process simple and stress-free, so you can focus on learning and excelling in your coursework. Whether you’re a beginner or an experienced programmer, this guide is here to provide step-by-step instructions, useful tips, and links to resources for all the tools you’ll need."
  },
  {
    "objectID": "posts/classes/105.html#cmpsc-105-required-software",
    "href": "posts/classes/105.html#cmpsc-105-required-software",
    "title": "CMPSC 105 - Data Exploration Setup Guide",
    "section": "",
    "text": "Windows:\n\nDownload Git from git-scm.com and run the installer.\nDuring installation, select “Use Git from the Windows Command Prompt”.\nVerify the installation:\n\nOpen Command Prompt and type:\ngit --version\n\n\nLinux (Ubuntu):\n\nInstall Git using Terminal:\nsudo apt update && sudo apt install git\nVerify the installation:\ngit --version\n\nmacOS:\n\nInstall Git using Homebrew:\nbrew install git\nVerify the installation:\ngit --version\n\n\n\n\n\nGo to github.com.\nClick “Sign Up” and follow the instructions to create an account.\nConfirm your email address when prompted.\n\n\n\n\n\nOpen your terminal (or Command Prompt).\nSet your Git username and email address:\ngit config --global user.name \"Your Name\"\ngit config --global user.email \"your.email@example.com\"\nNote: Use the email address associated with your GitHub account.\n\n\n\n\n\nGenerate a new SSH key:\nssh-keygen -t ed25519 -C \"your.email@example.com\"\nWhen prompted, press Enter to save the key in the default location, and optionally add a passphrase.\nStart the SSH agent:\neval \"$(ssh-agent -s)\"\nAdd your SSH key to the agent:\nssh-add ~/.ssh/id_ed25519\nCopy your public key to your clipboard:\ncat ~/.ssh/id_ed25519.pub\nAdd the key to your GitHub account:\n\nGo to GitHub SSH Settings.\nClick “New SSH Key”, paste your key, and save.\n\n\n\n\n\nTest your SSH connection to GitHub:\nssh -T git@github.com\nIf successful, you’ll see a message confirming the connection.\n\n\n\nIf you prefer not to use Git on your local machine, you can still upload and download files manually from GitHub.\n\n\n\nGo to your repository on GitHub.\nClick the “Add file” button and select “Upload files”.\nDrag and drop files or click “choose your files” to select them.\nAdd a commit message and click “Commit changes” to upload the files.\n\n\n\n\n\nNavigate to the repository on GitHub.\nClick the “Code” button and select “Download ZIP”.\nExtract the downloaded ZIP file to access the project files.\n\n\n\n\n\n\n\n\n\n\n\nDownload the installer from the official VSCode website.\nRun the installer and follow the prompts.\nInstall recommended extensions:\n\nOpen VSCode, go to the Extensions view (Ctrl+Shift+X), and search for the following:\n\n“Intellicode”\n“Intellicode API Usage Examples”\n“Python”\n“Jupyter”\n“Markdown All in One”\n“Rainbow CSV”\n“Ruff”\n\nClick “Install” for each.\n\n\n\n\n\n\nDownload the latest .deb package from the official VSCode website.\nInstall the .deb package using Terminal:\nsudo dpkg -i code_*.deb\nsudo apt-get install -f\nOpen VSCode and install recommended extensions:\n\nGo to the Extensions view (Ctrl+Shift+X), search for the following, and click “Install”:\n\n“Intellicode”\n“Intellicode API Usage Examples”\n“Python”\n“Jupyter”\n“Markdown All in One”\n“Rainbow CSV”\n“Ruff”\n\n\n\n\n\n\n\nDownload the installer from the official VSCode website.\nOpen the downloaded file and drag the VSCode icon into the Applications folder.\nInstall recommended extensions:\n\nOpen VSCode, go to the Extensions view (Cmd+Shift+X), and search for the following:\n\n“Intellicode”\n“Intellicode API Usage Examples”\n“Python”\n“Jupyter”\n“Markdown All in One”\n“Rainbow CSV”\n“Ruff”\n\nClick “Install” for each.\n\n\n\n\n\n\n\n\n\n\n\nOpen your Google Drive and create a folder named Colab Notebooks.\nOpen Google Colab.\nSave your notebook to Google Drive by clicking File &gt; Save a copy in Drive.\nTo find the Colab directory in Google Drive:\n\nOpen Google Drive and look for the Colab Notebooks folder. Any notebooks saved in Colab will automatically appear here.\n\nUploading/downloading notebooks to/from GitHub without Git:\n\nUploading: Download the .ipynb file from GitHub and upload it directly to Google Colab.\nDownloading: Use File &gt; Download &gt; Download .ipynb in Colab to save your notebook and then manually upload it to GitHub.\n\n\n\n\n\n\n\n\n\n\n\nDownload Discord from the official website.\nOpen the installer and follow the prompts to install Discord.\nLog in or create an account.\n\n\n\n\n\nDownload the .deb package from the Discord website.\nInstall the .deb package:\nsudo dpkg -i discord-*.deb\nsudo apt-get install -f\nOpen Discord from your applications menu.\n\n\n\n\n\nDownload Discord from the official website.\nOpen the downloaded file and drag the Discord icon into the Applications folder.\nLog in or create an account.\n\nBy completing these setup steps, you’ll be well-prepared for your CMPSC 105 coursework. If you encounter any issues, feel free to reach out through the course’s Discord channel or attend the ACM SOS Week sessions for assistance."
  },
  {
    "objectID": "posts/workshops/personal_website.html",
    "href": "posts/workshops/personal_website.html",
    "title": "Personal Website Workshop",
    "section": "",
    "text": "Date: April 02, 2025\nTime: 4:00 PM – 6:00 PM\nLocation: Alden Hall, Room 101\nInstructor: Alish Chhetri\n\n\n\n\nThis workshop is designed to help participants create and publish a simple personal website using basic HTML and CSS, with optional JavaScript. The goal is to introduce core web development concepts in a clear, beginner-friendly format, and help attendees get their site live by the end of the session.\n\n\n\n\n\nUnderstanding the structure of a webpage and learning how to add text, links, images, and sections.\n\n\n\nHow to style the page with colors, fonts, layout techniques, and simple visual adjustments.\n\n\n\nHow to upload the finished website to Netlify using the drag-and-drop method, and make it publicly accessible. We’ll also cover basic updates and custom domain setup.\n\n\n\n\n\nVisual Studio Code (code editor)\nNo prior coding experience is required\n\n\n\n\nBy the end of the workshop, participants will:\n\nUnderstand the basics of how websites are built and styled\nCreate a simple personal site with their own content\nSuccessfully publish their site using Netlify\nGain confidence to continue learning and expanding their site\n\n\n\n\n\nPlease install the following software before attending the workshop to ensure a smooth experience:\n\n\n\n\n\n\n\nDownload the installer from the official VSCode website.\nRun the installer and follow the prompts.\nInstall recommended extensions:\n\nOpen VSCode, go to the Extensions view (Ctrl+Shift+X), and search for the following:\n\n“Live Server”\n“Intellicode”\n“Intellicode API Usage Examples”\n\nClick “Install” for each.\n\n\n\n\n\n\nDownload the latest .deb package from the official VSCode website.\nInstall the .deb package using Terminal:\nsudo dpkg -i code_*.deb\nsudo apt-get install -f\nInstall recommended extensions as described above.\n\n\n\n\n\nDownload the installer from the official VSCode website.\nOpen the downloaded file and drag the VSCode icon into the Applications folder.\nInstall recommended extensions as described above.\n\n\n\n\n\n\n\n\nDownload Git from git-scm.com.\nRun the installer, accepting the default options (you can customize if you’re familiar with Git).\nCreate a GitHub account at github.com if you don’t have one.\nConfigure Git with your name and email:\ngit config --global user.name \"Your Name\"\ngit config --global user.email \"your.email@example.com\"\n\n\n\n\n\nInstall Git using Terminal:\nsudo apt update\nsudo apt install git\nCreate a GitHub account at github.com if you don’t have one.\nConfigure Git with your name and email as shown above.\n\n\n\n\n\nInstall Git using one of these methods:\n\nUsing Homebrew (if installed): brew install git\nDownload from git-scm.com\n\nCreate a GitHub account at github.com if you don’t have one.\nConfigure Git with your name and email as shown above.\n\n\n\n\n\n\n\n\n\n\n\nDownload the installer from the Quarto website.\nRun the installer and follow the prompts.\nVerify installation by opening Command Prompt and typing:\nquarto --version\n\n\n\n\n\nDownload the Linux package from the Quarto website.\nExtract and install:\nsudo dpkg -i quarto-*.deb\nVerify with quarto --version.\n\n\n\n\n\nDownload the macOS installer from the Quarto website.\nOpen the downloaded file and follow installation instructions.\nVerify with quarto --version.\n\n\n\n\n\n\n\n\nDownload the LTS installer from nodejs.org.\nRun the installer, accepting the default options.\nVerify installation:\nnode --version\nnpm --version\n\n\n\n\n\nInstall via Terminal:\nsudo apt update\nsudo apt install nodejs npm\nVerify installation as above.\n\n\n\n\n\nDownload the LTS installer from nodejs.org.\nRun the installer and follow the prompts.\nVerify installation as above.\n\n\n\n\n\n\nGo to netlify.com.\nClick “Sign Up” and create a free account.\nYou can sign up using your GitHub account (recommended) or email address.\n\n\n\n\n\n\nHTML Basics - MDN Web Docs\nCSS Basics - MDN Web Docs\nGit Basics - GitHub Docs\nQuarto Documentation\nIntroduction to Netlify\n\nIf you encounter issues with any installations, please arrive 15 minutes early to the workshop, and we’ll help you get set up."
  },
  {
    "objectID": "posts/workshops/personal_website.html#event-details",
    "href": "posts/workshops/personal_website.html#event-details",
    "title": "Personal Website Workshop",
    "section": "",
    "text": "Date: April 02, 2025\nTime: 4:00 PM – 6:00 PM\nLocation: Alden Hall, Room 101\nInstructor: Alish Chhetri"
  },
  {
    "objectID": "posts/workshops/personal_website.html#workshop-purpose",
    "href": "posts/workshops/personal_website.html#workshop-purpose",
    "title": "Personal Website Workshop",
    "section": "",
    "text": "This workshop is designed to help participants create and publish a simple personal website using basic HTML and CSS, with optional JavaScript. The goal is to introduce core web development concepts in a clear, beginner-friendly format, and help attendees get their site live by the end of the session."
  },
  {
    "objectID": "posts/workshops/personal_website.html#what-will-be-covered",
    "href": "posts/workshops/personal_website.html#what-will-be-covered",
    "title": "Personal Website Workshop",
    "section": "",
    "text": "Understanding the structure of a webpage and learning how to add text, links, images, and sections.\n\n\n\nHow to style the page with colors, fonts, layout techniques, and simple visual adjustments.\n\n\n\nHow to upload the finished website to Netlify using the drag-and-drop method, and make it publicly accessible. We’ll also cover basic updates and custom domain setup."
  },
  {
    "objectID": "posts/workshops/personal_website.html#requirements-for-participants",
    "href": "posts/workshops/personal_website.html#requirements-for-participants",
    "title": "Personal Website Workshop",
    "section": "",
    "text": "Visual Studio Code (code editor)\nNo prior coding experience is required"
  },
  {
    "objectID": "posts/workshops/personal_website.html#expected-outcomes",
    "href": "posts/workshops/personal_website.html#expected-outcomes",
    "title": "Personal Website Workshop",
    "section": "",
    "text": "By the end of the workshop, participants will:\n\nUnderstand the basics of how websites are built and styled\nCreate a simple personal site with their own content\nSuccessfully publish their site using Netlify\nGain confidence to continue learning and expanding their site"
  },
  {
    "objectID": "posts/workshops/personal_website.html#pre-workshop-setup",
    "href": "posts/workshops/personal_website.html#pre-workshop-setup",
    "title": "Personal Website Workshop",
    "section": "",
    "text": "Please install the following software before attending the workshop to ensure a smooth experience:\n\n\n\n\n\n\n\nDownload the installer from the official VSCode website.\nRun the installer and follow the prompts.\nInstall recommended extensions:\n\nOpen VSCode, go to the Extensions view (Ctrl+Shift+X), and search for the following:\n\n“Live Server”\n“Intellicode”\n“Intellicode API Usage Examples”\n\nClick “Install” for each.\n\n\n\n\n\n\nDownload the latest .deb package from the official VSCode website.\nInstall the .deb package using Terminal:\nsudo dpkg -i code_*.deb\nsudo apt-get install -f\nInstall recommended extensions as described above.\n\n\n\n\n\nDownload the installer from the official VSCode website.\nOpen the downloaded file and drag the VSCode icon into the Applications folder.\nInstall recommended extensions as described above.\n\n\n\n\n\n\n\n\nDownload Git from git-scm.com.\nRun the installer, accepting the default options (you can customize if you’re familiar with Git).\nCreate a GitHub account at github.com if you don’t have one.\nConfigure Git with your name and email:\ngit config --global user.name \"Your Name\"\ngit config --global user.email \"your.email@example.com\"\n\n\n\n\n\nInstall Git using Terminal:\nsudo apt update\nsudo apt install git\nCreate a GitHub account at github.com if you don’t have one.\nConfigure Git with your name and email as shown above.\n\n\n\n\n\nInstall Git using one of these methods:\n\nUsing Homebrew (if installed): brew install git\nDownload from git-scm.com\n\nCreate a GitHub account at github.com if you don’t have one.\nConfigure Git with your name and email as shown above.\n\n\n\n\n\n\n\n\n\n\n\nDownload the installer from the Quarto website.\nRun the installer and follow the prompts.\nVerify installation by opening Command Prompt and typing:\nquarto --version\n\n\n\n\n\nDownload the Linux package from the Quarto website.\nExtract and install:\nsudo dpkg -i quarto-*.deb\nVerify with quarto --version.\n\n\n\n\n\nDownload the macOS installer from the Quarto website.\nOpen the downloaded file and follow installation instructions.\nVerify with quarto --version.\n\n\n\n\n\n\n\n\nDownload the LTS installer from nodejs.org.\nRun the installer, accepting the default options.\nVerify installation:\nnode --version\nnpm --version\n\n\n\n\n\nInstall via Terminal:\nsudo apt update\nsudo apt install nodejs npm\nVerify installation as above.\n\n\n\n\n\nDownload the LTS installer from nodejs.org.\nRun the installer and follow the prompts.\nVerify installation as above.\n\n\n\n\n\n\nGo to netlify.com.\nClick “Sign Up” and create a free account.\nYou can sign up using your GitHub account (recommended) or email address.\n\n\n\n\n\n\nHTML Basics - MDN Web Docs\nCSS Basics - MDN Web Docs\nGit Basics - GitHub Docs\nQuarto Documentation\nIntroduction to Netlify\n\nIf you encounter issues with any installations, please arrive 15 minutes early to the workshop, and we’ll help you get set up."
  }
]